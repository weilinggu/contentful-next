# source: https://stagingm232-na.coravin.com/graphql
# timestamp: Wed May 13 2020 11:56:38 GMT-0400 (Eastern Daylight Time)

input AddBundleProductsToCartInput {
  cart_id: String!
  cart_items: [BundleProductCartItemInput]!
}

type AddBundleProductsToCartOutput {
  cart: Cart!
}

input AddConfigurableProductsToCartInput {
  cart_id: String!
  cart_items: [ConfigurableProductCartItemInput]!
}

type AddConfigurableProductsToCartOutput {
  cart: Cart!
}

input AddDownloadableProductsToCartInput {
  cart_id: String!
  cart_items: [DownloadableProductCartItemInput]!
}

type AddDownloadableProductsToCartOutput {
  cart: Cart!
}

input AddSimpleProductsToCartInput {
  cart_id: String!
  cart_items: [SimpleProductCartItemInput]!
}

type AddSimpleProductsToCartOutput {
  cart: Cart!
}

input AddVirtualProductsToCartInput {
  cart_id: String!
  cart_items: [VirtualProductCartItemInput]!
}

type AddVirtualProductsToCartOutput {
  cart: Cart!
}

"""
A bucket that contains information for each filterable option (such as price, category ID, and custom attributes).
"""
type Aggregation {
  """Attribute code of the aggregation group."""
  attribute_code: String!

  """The number of options in the aggregation group."""
  count: Int

  """The aggregation display name."""
  label: String

  """Array of options for the aggregation."""
  options: [AggregationOption]
}

type AggregationOption implements AggregationOptionInterface {
  """The number of items that match the aggregation option."""
  count: Int

  """Aggregation option display label."""
  label: String

  """The internal ID that represents the value of the option."""
  value: String!
}

interface AggregationOptionInterface {
  """The number of items that match the aggregation option."""
  count: Int

  """Aggregation option display label."""
  label: String

  """The internal ID that represents the value of the option."""
  value: String!
}

type AppliedCoupon {
  code: String!
}

"""Contains the applied gift card with applied and remaining balance"""
type AppliedGiftCard {
  """Applied balance to the current cart"""
  applied_balance: Money

  """Gift card account code"""
  code: String

  """Current balance remaining on gift card"""
  current_balance: Money

  """Gift card expiration date"""
  expiration_date: String
}

"""Applied and current balance"""
type AppliedStoreCredit {
  """Applied store credit balance to the current cart"""
  applied_balance: Money

  """Current balance remaining on store credit"""
  current_balance: Money

  """
  Indicates whether store credits are enabled. If the feature is disabled, then the current balance will not be returned
  """
  enabled: Boolean
}

input ApplyCouponToCartInput {
  cart_id: String!
  coupon_code: String!
}

type ApplyCouponToCartOutput {
  cart: Cart!
}

"""Defines the input required to run the applyGiftCardToCart mutation"""
input ApplyGiftCardToCartInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String!

  """The gift card code to be applied to the cart"""
  gift_card_code: String!
}

"""Defines the possible output for the applyGiftCardToCart mutation"""
type ApplyGiftCardToCartOutput {
  """Describes the contents of the specified shopping cart"""
  cart: Cart!
}

"""Defines the input required to run the applyStoreCreditToCart mutation"""
input ApplyStoreCreditToCartInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String!
}

"""Defines the possible output for the applyStoreCreditToCart mutation"""
type ApplyStoreCreditToCartOutput {
  """Describes the contents of the specified shopping cart"""
  cart: Cart!
}

"""
Attribute contains the attribute_type of the specified attribute_code and entity_type
"""
type Attribute {
  """
  The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
  """
  attribute_code: String

  """Attribute options list."""
  attribute_options: [AttributeOption]

  """The data type of the attribute"""
  attribute_type: String

  """The type of entity that defines the attribute"""
  entity_type: String

  """The frontend input type of the attribute"""
  input_type: String
}

"""AttributeInput specifies the attribute_code and entity_type to search"""
input AttributeInput {
  """
  The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
  """
  attribute_code: String

  """The type of entity that defines the attribute"""
  entity_type: String
}

"""Attribute option."""
type AttributeOption {
  """Attribute option label."""
  label: String

  """Attribute option value."""
  value: String
}

input AuthorizenetInput {
  """The last four digits of the credit or debit card"""
  cc_last_4: Int!

  """Authorize.Net's description of the transaction request"""
  opaque_data_descriptor: String!

  """The nonce returned by Authorize.Net"""
  opaque_data_value: String!
}

type AvailablePaymentMethod {
  """The payment method code"""
  code: String!

  """The payment method title."""
  title: String!
}

type AvailableShippingMethod {
  amount: Money!
  available: Boolean!
  base_amount: Money @deprecated(reason: "The field should not be used on the storefront")
  carrier_code: String!
  carrier_title: String!
  error_message: String

  """Could be null if method is not available"""
  method_code: String

  """Could be null if method is not available"""
  method_title: String
  price_excl_tax: Money!
  price_incl_tax: Money!
}

input BillingAddressInput {
  address: CartAddressInput
  customer_address_id: Int

  """Set billing address same as shipping"""
  same_as_shipping: Boolean

  """Deprecated: use `same_as_shipping` field instead"""
  use_for_shipping: Boolean
}

type BillingCartAddress implements CartAddressInterface {
  city: String!
  company: String
  country: CartAddressCountry!
  customer_notes: String @deprecated(reason: "The field is used only in shipping address")
  firstname: String!
  lastname: String!
  postcode: String
  region: CartAddressRegion
  street: [String]!
  telephone: String!
}

input BraintreeCcVaultInput {
  device_data: String
  public_hash: String!
}

input BraintreeInput {
  """
  Contains a fingerprint provided by Braintree JS SDK and should be sent with
  sale transaction details to the Braintree payment gateway. Should be specified
  only in a case if Kount (advanced fraud protection) is enabled for Braintree
  payment integration.
  """
  device_data: String

  """
  States whether an entered by a customer credit/debit card should be tokenized
  for later usage. Required only if Vault is enabled for Braintree payment integration.
  """
  is_active_payment_token_enabler: Boolean!

  """
  The one-time payment token generated by Braintree payment gateway based on
  card details. Required field to make sale transaction.
  """
  payment_method_nonce: String!
}

"""Breadcrumb item."""
type Breadcrumb {
  """Category ID."""
  category_id: Int

  """Category level."""
  category_level: Int

  """Category name."""
  category_name: String

  """Category URL key."""
  category_url_key: String

  """Category URL path."""
  category_url_path: String
}

type BundleCartItem implements CartItemInterface {
  bundle_options: [SelectedBundleOption]!
  customizable_options: [SelectedCustomizableOption]!
  id: String!
  prices: CartItemPrices
  product: ProductInterface!
  quantity: Float!
}

"""BundleItem defines an individual item in a bundle product."""
type BundleItem {
  """An ID assigned to each type of item in a bundle product."""
  option_id: Int

  """An array of additional options for this bundle item."""
  options: [BundleItemOption]

  """he relative position of this item compared to the other bundle items."""
  position: Int

  """Indicates whether the item must be included in the bundle."""
  required: Boolean

  """The SKU of the bundle product."""
  sku: String

  """The display name of the item."""
  title: String

  """
  The input type that the customer uses to select the item. Examples include radio button and checkbox.
  """
  type: String
}

"""
BundleItemOption defines characteristics and options for a specific bundle item.
"""
type BundleItemOption {
  """
  Indicates whether the customer can change the number of items for this option.
  """
  can_change_quantity: Boolean

  """The ID assigned to the bundled item option."""
  id: Int

  """Indicates whether this option is the default option."""
  is_default: Boolean

  """The text that identifies the bundled item option."""
  label: String

  """
  When a bundle item contains multiple options, the relative position of this option compared to the other options.
  """
  position: Int

  """The price of the selected option."""
  price: Float

  """One of FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """Contains details about this product option."""
  product: ProductInterface

  """Indicates the quantity of this specific bundle item."""
  qty: Float @deprecated(reason: "The `qty` is deprecated. Use `quantity` instead.")

  """Indicates the quantity of this specific bundle item."""
  quantity: Float
}

input BundleOptionInput {
  id: Int!
  quantity: Float!
  value: [String]!
}

"""
BundleProduct defines basic features of a bundle product and contains multiple BundleItems.
"""
type BundleProduct implements ProductInterface & PhysicalProductInterface & CustomizableProductInterface {
  """The attribute set assigned to the product."""
  attribute_set_id: Int

  """
  Relative canonical URL. This value is returned only if the system setting 'Use
  Canonical Link Meta Tag For Products' is enabled
  """
  canonical_url: String
  capsules: Int

  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: String
  coravin_at_a_glance: String
  coravin_autodelivery: String
  coravin_compare: String
  coravin_comparison_chart: String
  coravin_custom_info: String
  coravin_demooz: String
  coravin_exclusive: String
  coravin_faqs: String
  coravin_features: String
  coravin_getting_started: String
  coravin_market: String
  coravin_powerreviews_id: String
  coravin_tech_specs: String
  coravin_usage_tips: String
  coravin_why_capsules: String

  """The product's country of origin."""
  country_of_manufacture: String

  """Timestamp indicating when the product was created."""
  created_at: String

  """Crosssell Products"""
  crosssell_products: [ProductInterface]

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue

  """Indicates whether the bundle product has a dynamic price."""
  dynamic_price: Boolean

  """Indicates whether the bundle product has a dynamic SK."""
  dynamic_sku: Boolean

  """
  Indicates whether the bundle product has a dynamically calculated weight.
  """
  dynamic_weight: Boolean

  """Indicates whether a gift message is available."""
  gift_message_available: String

  """The ID number assigned to the product."""
  id: Int

  """The relative path to the main image on the product page."""
  image: ProductImage
  is_featured: Int

  """Indicates whether the product can be returned"""
  is_returnable: String

  """An array containing information about individual bundle items."""
  items: [BundleItem]

  """A number representing the product's manufacturer."""
  manufacturer: Int

  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]

  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  mirakl_mcm_is_operator_master: Int
  mirakl_mcm_product_id: String
  mirakl_offer_state_ids: String
  mirakl_shop_ids: String
  mirakl_sync: Int

  """The product name. Customers use this name to identify the product."""
  name: String

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  new_product: Int

  """The end date for new product listings."""
  new_to_date: String

  """Product stock only x left count"""
  only_x_left_in_stock: Float

  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  persona: String
  pr_asin: String

  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")

  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!

  """An array of TierPrice objects."""
  price_tiers: [TierPrice]

  """One of PRICE_RANGE or AS_LOW_AS."""
  price_view: PriceViewEnum
  product_family: String

  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]
  product_sort_order: String

  """Related Products"""
  related_products: [ProductInterface]

  """Indicates whether to ship bundle items together or individually."""
  ship_bundle_items: ShipBundleItemsEnum

  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String

  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage

  """The beginning date that a product has a special price."""
  special_from_date: String

  """The discounted price of the product."""
  special_price: Float

  """The end date that a product has a special price."""
  special_to_date: String

  """Stock status of the product"""
  stock_status: ProductStockStatus
  style: String

  """The file name of a swatch image"""
  swatch_image: String

  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")

  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")

  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use __typename instead.")
  type_of_product: Int
  upc_code: String

  """Timestamp indicating when the product was updated."""
  updated_at: String

  """Upsell Products"""
  upsell_products: [ProductInterface]

  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")

  """URL rewrites list"""
  url_rewrites: [UrlRewrite]

  """The part of the product URL that is appended after the url key"""
  url_suffix: String

  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")

  """The weight of the item, in units defined by the store."""
  weight: Float
}

input BundleProductCartItemInput {
  bundle_options: [BundleOptionInput]!
  customizable_options: [CustomizableOptionInput]
  data: CartItemInput!
}

type Cart {
  """An array of coupons that have been applied to the cart"""
  applied_coupon: AppliedCoupon @deprecated(reason: "Use applied_coupons instead ")

  """
  An array of `AppliedCoupon` objects. Each object contains the `code` text attribute, which specifies the coupon code
  """
  applied_coupons: [AppliedCoupon]

  """
  Contains the code attribute, which specifies the applied gift card codes
  """
  applied_gift_cards: [AppliedGiftCard]

  """Contains store credit information applied on the cart"""
  applied_store_credit: AppliedStoreCredit

  """Available payment methods"""
  available_payment_methods: [AvailablePaymentMethod]
  billing_address: BillingCartAddress
  email: String

  """The ID of the cart."""
  id: ID!
  is_virtual: Boolean!
  items: [CartItemInterface]
  prices: CartPrices
  selected_payment_method: SelectedPaymentMethod
  shipping_addresses: [ShippingCartAddress]!
  total_quantity: Float!
}

type CartAddressCountry {
  code: String!
  label: String!
}

input CartAddressInput {
  city: String!
  company: String
  country_code: String!
  firstname: String!
  lastname: String!
  postcode: String
  region: String
  save_in_address_book: Boolean
  street: [String]!
  telephone: String!
}

interface CartAddressInterface {
  city: String!
  company: String
  country: CartAddressCountry!
  firstname: String!
  lastname: String!
  postcode: String
  region: CartAddressRegion
  street: [String]!
  telephone: String!
}

type CartAddressRegion {
  code: String!
  label: String!
}

type CartDiscount {
  amount: Money!
  label: [String]!
}

input CartItemInput {
  quantity: Float!
  sku: String!
}

interface CartItemInterface {
  id: String!
  prices: CartItemPrices
  product: ProductInterface!
  quantity: Float!
}

type CartItemPrices {
  """An array of discounts to be applied to the cart item"""
  discounts: [Discount]
  price: Money!
  row_total: Money!
  row_total_including_tax: Money!

  """The total of all discounts applied to the item"""
  total_item_discount: Money
}

"""
Deprecated: `cart_items` field of `ShippingCartAddress` returns now  `CartItemInterface` instead of `CartItemQuantity`
"""
type CartItemQuantity {
  cart_item_id: Int! @deprecated(reason: "`cart_items` field of `ShippingCartAddress` returns now `CartItemInterface` instead of `CartItemQuantity`")
  quantity: Float! @deprecated(reason: "`cart_items` field of `ShippingCartAddress` returns now `CartItemInterface` instead of `CartItemQuantity`")
}

type CartItemSelectedOptionValuePrice {
  type: PriceTypeEnum!
  units: String!
  value: Float!
}

input CartItemUpdateInput {
  cart_item_id: Int!
  customizable_options: [CustomizableOptionInput]
  quantity: Float
}

type CartPrices {
  applied_taxes: [CartTaxItem]
  discount: CartDiscount @deprecated(reason: "Use discounts instead ")

  """An array of applied discounts"""
  discounts: [Discount]
  grand_total: Money
  subtotal_excluding_tax: Money
  subtotal_including_tax: Money
  subtotal_with_discount_excluding_tax: Money
}

type CartTaxItem {
  amount: Money!
  label: String!
}

"""
CategoryFilterInput defines the filters to be used in the search. A filter
contains at least one attribute, a comparison operator, and the value that is
being searched for.
"""
input CategoryFilterInput {
  """Filter by category ID that uniquely identifies the category."""
  ids: FilterEqualTypeInput

  """Filter by the display name of the category."""
  name: FilterMatchTypeInput

  """Filter by the part of the URL that identifies the category"""
  url_key: FilterEqualTypeInput
}

"""
CategoryInterface contains the full set of attributes that can be returned in a category search.
"""
interface CategoryInterface {
  affirm_category_mfp: String
  affirm_category_mfp_end_date: String
  affirm_category_mfp_priority: Int
  affirm_category_mfp_start_date: String
  affirm_category_mfp_type: Int
  affirm_category_promo_id: String
  automatic_sorting: String
  available_sort_by: [String]

  """Breadcrumbs, parent categories info."""
  breadcrumbs: [Breadcrumb]

  """
  Relative canonical URL. This value is returned only if the system setting 'Use
  Canonical Link Meta Tag For Categories' is enabled
  """
  canonical_url: String
  children_count: String

  """Category CMS Block."""
  cms_block: CmsBlock

  """Timestamp indicating when the category was created."""
  created_at: String
  custom_layout_update_file: String

  """The attribute to use for sorting."""
  default_sort_by: String

  """An optional description of the category."""
  description: String
  display_mode: String
  filter_price_range: Float

  """An ID that uniquely identifies the category."""
  id: Int
  image: String
  include_in_menu: Int
  is_anchor: Int
  landing_page: Int

  """Indicates the depth of the category within the tree."""
  level: Int
  meta_description: String
  meta_keywords: String
  meta_title: String
  mirakl_attr_set_id: Int
  mirakl_sync: Int

  """The display name of the category."""
  name: String

  """Category Path."""
  path: String

  """Category path in store."""
  path_in_store: String

  """
  The position of the category relative to other categories at the same level in tree.
  """
  position: Int

  """The number of products in the category."""
  product_count: Int

  """The list of products assigned to the category."""
  products(
    """
    Specifies the maximum number of results to return at once. This attribute is optional.
    """
    pageSize: Int = 20

    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1

    """
    Specifies which attributes to sort on, and whether to return the results in ascending or descending order.
    """
    sort: ProductAttributeSortInput
  ): CategoryProducts

  """Timestamp indicating when the category was updated."""
  updated_at: String

  """The url key assigned to the category."""
  url_key: String

  """The url path assigned to the category."""
  url_path: String

  """The part of the category URL that is appended after the url key"""
  url_suffix: String
}

"""The category products object returned in the Category query."""
type CategoryProducts {
  """An array of products that are assigned to the category."""
  items: [ProductInterface]

  """
  An object that includes the page_info and currentPage values specified in the query.
  """
  page_info: SearchResultPageInfo

  """The number of products returned."""
  total_count: Int
}

"""Category Tree implementation."""
type CategoryTree implements CategoryInterface {
  affirm_category_mfp: String
  affirm_category_mfp_end_date: String
  affirm_category_mfp_priority: Int
  affirm_category_mfp_start_date: String
  affirm_category_mfp_type: Int
  affirm_category_promo_id: String
  automatic_sorting: String
  available_sort_by: [String]

  """Breadcrumbs, parent categories info."""
  breadcrumbs: [Breadcrumb]

  """
  Relative canonical URL. This value is returned only if the system setting 'Use
  Canonical Link Meta Tag For Categories' is enabled
  """
  canonical_url: String

  """Child categories tree."""
  children: [CategoryTree]
  children_count: String

  """Category CMS Block."""
  cms_block: CmsBlock

  """Timestamp indicating when the category was created."""
  created_at: String
  custom_layout_update_file: String

  """The attribute to use for sorting."""
  default_sort_by: String

  """An optional description of the category."""
  description: String
  display_mode: String
  filter_price_range: Float

  """An ID that uniquely identifies the category."""
  id: Int
  image: String
  include_in_menu: Int
  is_anchor: Int
  landing_page: Int

  """Indicates the depth of the category within the tree."""
  level: Int
  meta_description: String
  meta_keywords: String
  meta_title: String
  mirakl_attr_set_id: Int
  mirakl_sync: Int

  """The display name of the category."""
  name: String

  """Category Path."""
  path: String

  """Category path in store."""
  path_in_store: String

  """
  The position of the category relative to other categories at the same level in tree.
  """
  position: Int

  """The number of products in the category."""
  product_count: Int

  """The list of products assigned to the category."""
  products(
    """
    Specifies the maximum number of results to return at once. This attribute is optional.
    """
    pageSize: Int = 20

    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1

    """
    Specifies which attributes to sort on, and whether to return the results in ascending or descending order.
    """
    sort: ProductAttributeSortInput
  ): CategoryProducts

  """Timestamp indicating when the category was updated."""
  updated_at: String

  """The url key assigned to the category."""
  url_key: String

  """The url path assigned to the category."""
  url_path: String

  """The part of the category URL that is appended after the url key"""
  url_suffix: String
}

"""Defines all Checkout Agreement information"""
type CheckoutAgreement {
  """Checkout Agreement identifier"""
  agreement_id: Int!

  """Checkout Agreement checkbox text"""
  checkbox_text: String!

  """Checkout Agreement content"""
  content: String!

  """Checkout Agreement content height"""
  content_height: String

  """Is Checkout Agreement content in HTML format"""
  is_html: Boolean!
  mode: CheckoutAgreementMode!

  """Checkout Agreement name"""
  name: String!
}

enum CheckoutAgreementMode {
  AUTO
  MANUAL
}

"""CMS block defines all CMS block information"""
type CmsBlock {
  """CMS block content"""
  content: String

  """CMS block identifier"""
  identifier: String

  """CMS block title"""
  title: String
}

"""CMS blocks information"""
type CmsBlocks {
  """An array of CMS blocks"""
  items: [CmsBlock]
}

"""CMS page defines all CMS page information"""
type CmsPage {
  """CMS page content"""
  content: String

  """CMS page content heading"""
  content_heading: String

  """Identifier of the CMS page"""
  identifier: String

  """CMS page meta description"""
  meta_description: String

  """CMS page meta keywords"""
  meta_keywords: String

  """CMS page meta title"""
  meta_title: String

  """CMS page content heading"""
  page_layout: String

  """CMS page title"""
  title: String

  """URL key of CMS page"""
  url_key: String
}

type ColorSwatchData implements SwatchDataInterface {
  """Value of swatch item (HEX color code, image link or textual value)"""
  value: String
}

type ComplexTextValue {
  """HTML format"""
  html: String!
}

"""
ConfigurableAttributeOption contains the value_index (and other related
information) assigned to a configurable product option
"""
type ConfigurableAttributeOption {
  """The ID assigned to the attribute"""
  code: String

  """A string that describes the configurable attribute option"""
  label: String

  """A unique index number assigned to the configurable product option"""
  value_index: Int
}

type ConfigurableCartItem implements CartItemInterface {
  configurable_options: [SelectedConfigurableOption]!
  customizable_options: [SelectedCustomizableOption]!
  id: String!
  prices: CartItemPrices
  product: ProductInterface!
  quantity: Float!
}

"""
ConfigurableProduct defines basic features of a configurable product and its simple product variants
"""
type ConfigurableProduct implements ProductInterface & PhysicalProductInterface & CustomizableProductInterface {
  """The attribute set assigned to the product."""
  attribute_set_id: Int

  """
  Relative canonical URL. This value is returned only if the system setting 'Use
  Canonical Link Meta Tag For Products' is enabled
  """
  canonical_url: String
  capsules: Int

  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: String

  """An array of linked simple product items"""
  configurable_options: [ConfigurableProductOptions]
  coravin_at_a_glance: String
  coravin_autodelivery: String
  coravin_compare: String
  coravin_comparison_chart: String
  coravin_custom_info: String
  coravin_demooz: String
  coravin_exclusive: String
  coravin_faqs: String
  coravin_features: String
  coravin_getting_started: String
  coravin_market: String
  coravin_powerreviews_id: String
  coravin_tech_specs: String
  coravin_usage_tips: String
  coravin_why_capsules: String

  """The product's country of origin."""
  country_of_manufacture: String

  """Timestamp indicating when the product was created."""
  created_at: String

  """Crosssell Products"""
  crosssell_products: [ProductInterface]

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue

  """Indicates whether a gift message is available."""
  gift_message_available: String

  """The ID number assigned to the product."""
  id: Int

  """The relative path to the main image on the product page."""
  image: ProductImage
  is_featured: Int

  """Indicates whether the product can be returned"""
  is_returnable: String

  """A number representing the product's manufacturer."""
  manufacturer: Int

  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]

  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  mirakl_mcm_is_operator_master: Int
  mirakl_mcm_product_id: String
  mirakl_offer_state_ids: String
  mirakl_shop_ids: String
  mirakl_sync: Int

  """The product name. Customers use this name to identify the product."""
  name: String

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  new_product: Int

  """The end date for new product listings."""
  new_to_date: String

  """Product stock only x left count"""
  only_x_left_in_stock: Float

  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  persona: String
  pr_asin: String

  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")

  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!

  """An array of TierPrice objects."""
  price_tiers: [TierPrice]
  product_family: String

  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]
  product_sort_order: String

  """Related Products"""
  related_products: [ProductInterface]

  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String

  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage

  """The beginning date that a product has a special price."""
  special_from_date: String

  """The discounted price of the product."""
  special_price: Float

  """The end date that a product has a special price."""
  special_to_date: String

  """Stock status of the product"""
  stock_status: ProductStockStatus
  style: String

  """The file name of a swatch image"""
  swatch_image: String

  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")

  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")

  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use __typename instead.")
  type_of_product: Int
  upc_code: String

  """Timestamp indicating when the product was updated."""
  updated_at: String

  """Upsell Products"""
  upsell_products: [ProductInterface]

  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")

  """URL rewrites list"""
  url_rewrites: [UrlRewrite]

  """The part of the product URL that is appended after the url key"""
  url_suffix: String

  """An array of variants of products"""
  variants: [ConfigurableVariant]

  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")

  """The weight of the item, in units defined by the store."""
  weight: Float
}

input ConfigurableProductCartItemInput {
  customizable_options: [CustomizableOptionInput]
  data: CartItemInput!

  """Configurable product SKU."""
  parent_sku: String
  variant_sku: String
}

"""
ConfigurableProductOptions defines configurable attributes for the specified product
"""
type ConfigurableProductOptions {
  """A string that identifies the attribute"""
  attribute_code: String

  """The ID assigned to the attribute"""
  attribute_id: String

  """The configurable option ID number assigned by the system"""
  id: Int

  """
  A string that describes the configurable product option, which is displayed on the UI
  """
  label: String

  """A number that indicates the order in which the attribute is displayed"""
  position: Int

  """This is the same as a product's id field"""
  product_id: Int

  """Indicates whether the option is the default"""
  use_default: Boolean

  """
  An array that defines the value_index codes assigned to the configurable product
  """
  values: [ConfigurableProductOptionsValues]
}

"""
ConfigurableProductOptionsValues contains the index number assigned to a configurable product option
"""
type ConfigurableProductOptionsValues {
  """The label of the product on the default store"""
  default_label: String

  """The label of the product"""
  label: String

  """The label of the product on the current store"""
  store_label: String

  """Swatch data for configurable product option"""
  swatch_data: SwatchDataInterface

  """Indicates whether to use the default_label"""
  use_default_value: Boolean

  """A unique index number assigned to the configurable product option"""
  value_index: Int
}

"""
An array containing all the simple product variants of a configurable product
"""
type ConfigurableVariant {
  attributes: [ConfigurableAttributeOption]
  product: SimpleProduct
}

type Country {
  available_regions: [Region]
  full_name_english: String
  full_name_locale: String
  id: String
  three_letter_abbreviation: String
  two_letter_abbreviation: String
}

"""The list of countries codes"""
enum CountryCodeEnum {
  """Afghanistan"""
  AF

  """Åland Islands"""
  AX

  """Albania"""
  AL

  """Algeria"""
  DZ

  """American Samoa"""
  AS

  """Andorra"""
  AD

  """Angola"""
  AO

  """Anguilla"""
  AI

  """Antarctica"""
  AQ

  """Antigua & Barbuda"""
  AG

  """Argentina"""
  AR

  """Armenia"""
  AM

  """Aruba"""
  AW

  """Australia"""
  AU

  """Austria"""
  AT

  """Azerbaijan"""
  AZ

  """Bahamas"""
  BS

  """Bahrain"""
  BH

  """Bangladesh"""
  BD

  """Barbados"""
  BB

  """Belarus"""
  BY

  """Belgium"""
  BE

  """Belize"""
  BZ

  """Benin"""
  BJ

  """Bermuda"""
  BM

  """Bhutan"""
  BT

  """Bolivia"""
  BO

  """Bosnia & Herzegovina"""
  BA

  """Botswana"""
  BW

  """Bouvet Island"""
  BV

  """Brazil"""
  BR

  """British Indian Ocean Territory"""
  IO

  """British Virgin Islands"""
  VG

  """Brunei"""
  BN

  """Bulgaria"""
  BG

  """Burkina Faso"""
  BF

  """Burundi"""
  BI

  """Cambodia"""
  KH

  """Cameroon"""
  CM

  """Canada"""
  CA

  """Cape Verde"""
  CV

  """Cayman Islands"""
  KY

  """Central African Republic"""
  CF

  """Chad"""
  TD

  """Chile"""
  CL

  """China"""
  CN

  """Christmas Island"""
  CX

  """Cocos (Keeling) Islands"""
  CC

  """Colombia"""
  CO

  """Comoros"""
  KM

  """Congo-Brazzaville"""
  CG

  """Congo-Kinshasa"""
  CD

  """Cook Islands"""
  CK

  """Costa Rica"""
  CR

  """Côte d’Ivoire"""
  CI

  """Croatia"""
  HR

  """Cuba"""
  CU

  """Cyprus"""
  CY

  """Czech Republic"""
  CZ

  """Denmark"""
  DK

  """Djibouti"""
  DJ

  """Dominica"""
  DM

  """Dominican Republic"""
  DO

  """Ecuador"""
  EC

  """Egypt"""
  EG

  """El Salvador"""
  SV

  """Equatorial Guinea"""
  GQ

  """Eritrea"""
  ER

  """Estonia"""
  EE

  """Ethiopia"""
  ET

  """Falkland Islands"""
  FK

  """Faroe Islands"""
  FO

  """Fiji"""
  FJ

  """Finland"""
  FI

  """France"""
  FR

  """French Guiana"""
  GF

  """French Polynesia"""
  PF

  """French Southern Territories"""
  TF

  """Gabon"""
  GA

  """Gambia"""
  GM

  """Georgia"""
  GE

  """Germany"""
  DE

  """Ghana"""
  GH

  """Gibraltar"""
  GI

  """Greece"""
  GR

  """Greenland"""
  GL

  """Grenada"""
  GD

  """Guadeloupe"""
  GP

  """Guam"""
  GU

  """Guatemala"""
  GT

  """Guernsey"""
  GG

  """Guinea"""
  GN

  """Guinea-Bissau"""
  GW

  """Guyana"""
  GY

  """Haiti"""
  HT

  """Heard &amp; McDonald Islands"""
  HM

  """Honduras"""
  HN

  """Hong Kong SAR China"""
  HK

  """Hungary"""
  HU

  """Iceland"""
  IS

  """India"""
  IN

  """Indonesia"""
  ID

  """Iran"""
  IR

  """Iraq"""
  IQ

  """Ireland"""
  IE

  """Isle of Man"""
  IM

  """Israel"""
  IL

  """Italy"""
  IT

  """Jamaica"""
  JM

  """Japan"""
  JP

  """Jersey"""
  JE

  """Jordan"""
  JO

  """Kazakhstan"""
  KZ

  """Kenya"""
  KE

  """Kiribati"""
  KI

  """Kuwait"""
  KW

  """Kyrgyzstan"""
  KG

  """Laos"""
  LA

  """Latvia"""
  LV

  """Lebanon"""
  LB

  """Lesotho"""
  LS

  """Liberia"""
  LR

  """Libya"""
  LY

  """Liechtenstein"""
  LI

  """Lithuania"""
  LT

  """Luxembourg"""
  LU

  """Macau SAR China"""
  MO

  """Macedonia"""
  MK

  """Madagascar"""
  MG

  """Malawi"""
  MW

  """Malaysia"""
  MY

  """Maldives"""
  MV

  """Mali"""
  ML

  """Malta"""
  MT

  """Marshall Islands"""
  MH

  """Martinique"""
  MQ

  """Mauritania"""
  MR

  """Mauritius"""
  MU

  """Mayotte"""
  YT

  """Mexico"""
  MX

  """Micronesia"""
  FM

  """Moldova"""
  MD

  """Monaco"""
  MC

  """Mongolia"""
  MN

  """Montenegro"""
  ME

  """Montserrat"""
  MS

  """Morocco"""
  MA

  """Mozambique"""
  MZ

  """Myanmar (Burma)"""
  MM

  """Namibia"""
  NA

  """Nauru"""
  NR

  """Nepal"""
  NP

  """Netherlands"""
  NL

  """Netherlands Antilles"""
  AN

  """New Caledonia"""
  NC

  """New Zealand"""
  NZ

  """Nicaragua"""
  NI

  """Niger"""
  NE

  """Nigeria"""
  NG

  """Niue"""
  NU

  """Norfolk Island"""
  NF

  """Northern Mariana Islands"""
  MP

  """North Korea"""
  KP

  """Norway"""
  NO

  """Oman"""
  OM

  """Pakistan"""
  PK

  """Palau"""
  PW

  """Palestinian Territories"""
  PS

  """Panama"""
  PA

  """Papua New Guinea"""
  PG

  """Paraguay"""
  PY

  """Peru"""
  PE

  """Philippines"""
  PH

  """Pitcairn Islands"""
  PN

  """Poland"""
  PL

  """Portugal"""
  PT

  """Qatar"""
  QA

  """Réunion"""
  RE

  """Romania"""
  RO

  """Russia"""
  RU

  """Rwanda"""
  RW

  """Samoa"""
  WS

  """San Marino"""
  SM

  """São Tomé & Príncipe"""
  ST

  """Saudi Arabia"""
  SA

  """Senegal"""
  SN

  """Serbia"""
  RS

  """Seychelles"""
  SC

  """Sierra Leone"""
  SL

  """Singapore"""
  SG

  """Slovakia"""
  SK

  """Slovenia"""
  SI

  """Solomon Islands"""
  SB

  """Somalia"""
  SO

  """South Africa"""
  ZA

  """South Georgia & South Sandwich Islands"""
  GS

  """South Korea"""
  KR

  """Spain"""
  ES

  """Sri Lanka"""
  LK

  """St. Barthélemy"""
  BL

  """St. Helena"""
  SH

  """St. Kitts & Nevis"""
  KN

  """St. Lucia"""
  LC

  """St. Martin"""
  MF

  """St. Pierre & Miquelon"""
  PM

  """St. Vincent & Grenadines"""
  VC

  """Sudan"""
  SD

  """Suriname"""
  SR

  """Svalbard & Jan Mayen"""
  SJ

  """Swaziland"""
  SZ

  """Sweden"""
  SE

  """Switzerland"""
  CH

  """Syria"""
  SY

  """Taiwan"""
  TW

  """Tajikistan"""
  TJ

  """Tanzania"""
  TZ

  """Thailand"""
  TH

  """Timor-Leste"""
  TL

  """Togo"""
  TG

  """Tokelau"""
  TK

  """Tonga"""
  TO

  """Trinidad & Tobago"""
  TT

  """Tunisia"""
  TN

  """Turkey"""
  TR

  """Turkmenistan"""
  TM

  """Turks & Caicos Islands"""
  TC

  """Tuvalu"""
  TV

  """Uganda"""
  UG

  """Ukraine"""
  UA

  """United Arab Emirates"""
  AE

  """United Kingdom"""
  GB

  """United States"""
  US

  """Uruguay"""
  UY

  """U.S. Outlying Islands"""
  UM

  """U.S. Virgin Islands"""
  VI

  """Uzbekistan"""
  UZ

  """Vanuatu"""
  VU

  """Vatican City"""
  VA

  """Venezuela"""
  VE

  """Vietnam"""
  VN

  """Wallis & Futuna"""
  WF

  """Western Sahara"""
  EH

  """Yemen"""
  YE

  """Zambia"""
  ZM

  """Zimbabwe"""
  ZW
}

input createEmptyCartInput {
  cart_id: String
}

"""
Contains the secure information used to authorize transaction. Applies to Payflow Pro and Payments Pro payment methods.
"""
type CreatePayflowProTokenOutput {
  response_message: String!
  result: Int!
  result_code: Int!
  secure_token: String!
  secure_token_id: String!
}

"""Required fields for Payflow Pro and Payments Pro credit card payments"""
input CreditCardDetailsInput {
  """Credit card expiration month"""
  cc_exp_month: Int!

  """Credit card expiration year"""
  cc_exp_year: Int!

  """Last 4 digits of the credit card"""
  cc_last_4: Int!

  """Credit card type"""
  cc_type: String!
}

type Currency {
  available_currency_codes: [String]
  base_currency_code: String
  base_currency_symbol: String
  default_display_currecy_code: String @deprecated(reason: "Symbol was missed. Use `default_display_currency_code`.")
  default_display_currecy_symbol: String @deprecated(reason: "Symbol was missed. Use `default_display_currency_symbol`.")
  default_display_currency_code: String
  default_display_currency_symbol: String
  exchange_rates: [ExchangeRate]
}

"""The list of available currency codes"""
enum CurrencyEnum {
  AFN
  ALL
  AZN
  DZD
  AOA
  ARS
  AMD
  AWG
  AUD
  BSD
  BHD
  BDT
  BBD
  BYR
  BZD
  BMD
  BTN
  BOB
  BAM
  BWP
  BRL
  GBP
  BND
  BGN
  BUK
  BIF
  KHR
  CAD
  CVE
  CZK
  KYD
  GQE
  CLP
  CNY
  COP
  KMF
  CDF
  CRC
  HRK
  CUP
  DKK
  DJF
  DOP
  XCD
  EGP
  SVC
  ERN
  EEK
  ETB
  EUR
  FKP
  FJD
  GMD
  GEK
  GEL
  GHS
  GIP
  GTQ
  GNF
  GYD
  HTG
  HNL
  HKD
  HUF
  ISK
  INR
  IDR
  IRR
  IQD
  ILS
  JMD
  JPY
  JOD
  KZT
  KES
  KWD
  KGS
  LAK
  LVL
  LBP
  LSL
  LRD
  LYD
  LTL
  MOP
  MKD
  MGA
  MWK
  MYR
  MVR
  LSM
  MRO
  MUR
  MXN
  MDL
  MNT
  MAD
  MZN
  MMK
  NAD
  NPR
  ANG
  YTL
  NZD
  NIC
  NGN
  KPW
  NOK
  OMR
  PKR
  PAB
  PGK
  PYG
  PEN
  PHP
  PLN
  QAR
  RHD
  RON
  RUB
  RWF
  SHP
  STD
  SAR
  RSD
  SCR
  SLL
  SGD
  SKK
  SBD
  SOS
  ZAR
  KRW
  LKR
  SDG
  SRD
  SZL
  SEK
  CHF
  SYP
  TWD
  TJS
  TZS
  THB
  TOP
  TTD
  TND
  TMM
  USD
  UGX
  UAH
  AED
  UYU
  UZS
  VUV
  VEB
  VEF
  VND
  CHE
  CHW
  XOF
  WST
  YER
  ZMK
  ZWD
  TRY
  AZM
  ROL
  TRL
  XPF
}

"""
CustomAttributeMetadata defines an array of attribute_codes and entity_types
"""
type CustomAttributeMetadata {
  """An array of attributes"""
  items: [Attribute]
}

"""Customer defines the customer name and address and other details"""
type Customer {
  """An array containing the customer's shipping and billing addresses"""
  addresses: [CustomerAddress]

  """Timestamp indicating when the account was created"""
  created_at: String

  """The customer's date of birth"""
  date_of_birth: String

  """The ID assigned to the billing address"""
  default_billing: String

  """The ID assigned to the shipping address"""
  default_shipping: String

  """The customer's date of birth"""
  dob: String @deprecated(reason: "Use `date_of_birth` instead")

  """The customer's email address. Required"""
  email: String

  """The customer's first name"""
  firstname: String

  """The customer's gender (Male - 1, Female - 2)"""
  gender: Int
  group_id: Int @deprecated(reason: "Customer group should not be exposed in the storefront scenarios")

  """The ID assigned to the customer"""
  id: Int @deprecated(reason: "id is not needed as part of Customer because on server side it can be identified based on customer token used for authentication. There is no need to know customer ID on the client side.")

  """
  Indicates whether the customer is subscribed to the company's newsletter
  """
  is_subscribed: Boolean

  """The customer's family name"""
  lastname: String

  """The customer's middle name"""
  middlename: String

  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String

  """
  Contains the store credit information applied for the logged in customer
  """
  store_credit: CustomerStoreCredit

  """A value such as Sr., Jr., or III"""
  suffix: String

  """The customer's Value-added tax (VAT) number (for corporate customers)"""
  taxvat: String

  """The wishlist query returns the contents of a customer's wish lists"""
  wishlist: Wishlist!
}

"""
CustomerAddress contains detailed information about a customer's billing and shipping addresses
"""
type CustomerAddress {
  """The city or town"""
  city: String

  """The customer's company"""
  company: String

  """The customer's country"""
  country_code: CountryCodeEnum

  """The customer's country"""
  country_id: String @deprecated(reason: "Use `country_code` instead.")
  custom_attributes: [CustomerAddressAttribute] @deprecated(reason: "Custom attributes should not be put into container")

  """The customer ID"""
  customer_id: Int @deprecated(reason: "customer_id is not needed as part of CustomerAddress, address ID (id) is unique identifier for the addresses.")

  """Indicates whether the address is the default billing address"""
  default_billing: Boolean

  """Indicates whether the address is the default shipping address"""
  default_shipping: Boolean

  """Address extension attributes"""
  extension_attributes: [CustomerAddressAttribute]

  """The fax number"""
  fax: String

  """
  The first name of the person associated with the shipping/billing address
  """
  firstname: String

  """The ID assigned to the address object"""
  id: Int

  """
  The family name of the person associated with the shipping/billing address
  """
  lastname: String

  """
  The middle name of the person associated with the shipping/billing address
  """
  middlename: String

  """The customer's ZIP or postal code"""
  postcode: String

  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String

  """An object containing the region name, region code, and region ID"""
  region: CustomerAddressRegion
  region_id: Int @deprecated(reason: "Region ID is excessive on storefront and region code should suffice for all scenarios")

  """An array of strings that define the street number and name"""
  street: [String]

  """A value such as Sr., Jr., or III"""
  suffix: String

  """The telephone number"""
  telephone: String

  """The customer's Value-added tax (VAT) number (for corporate customers)"""
  vat_id: String
}

type CustomerAddressAttribute {
  """Attribute code"""
  attribute_code: String

  """Attribute value"""
  value: String
}

input CustomerAddressAttributeInput {
  """Attribute code"""
  attribute_code: String!

  """Attribute value"""
  value: String!
}

input CustomerAddressInput {
  """The city or town"""
  city: String

  """The customer's company"""
  company: String

  """The customer's country"""
  country_code: CountryCodeEnum

  """Deprecated: use `country_code` instead."""
  country_id: CountryCodeEnum

  """Deprecated: Custom attributes should not be put into container."""
  custom_attributes: [CustomerAddressAttributeInput]

  """Indicates whether the address is the default billing address"""
  default_billing: Boolean

  """Indicates whether the address is the default shipping address"""
  default_shipping: Boolean

  """The fax number"""
  fax: String

  """
  The first name of the person associated with the shipping/billing address
  """
  firstname: String

  """
  The family name of the person associated with the shipping/billing address
  """
  lastname: String

  """
  The middle name of the person associated with the shipping/billing address
  """
  middlename: String

  """The customer's ZIP or postal code"""
  postcode: String

  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String

  """An object containing the region name, region code, and region ID"""
  region: CustomerAddressRegionInput

  """An array of strings that define the street number and name"""
  street: [String]

  """A value such as Sr., Jr., or III"""
  suffix: String

  """The telephone number"""
  telephone: String

  """The customer's Tax/VAT number (for corporate customers)"""
  vat_id: String
}

"""CustomerAddressRegion defines the customer's state or province"""
type CustomerAddressRegion {
  """The state or province name"""
  region: String

  """The address region code"""
  region_code: String
  region_id: Int @deprecated(reason: "Region ID is excessive on storefront and region code should suffice for all scenarios")
}

"""CustomerAddressRegionInput defines the customer's state or province"""
input CustomerAddressRegionInput {
  """The state or province name"""
  region: String

  """The address region code"""
  region_code: String

  """
  region_id is deprecated. Region ID is excessive on storefront and region code should suffice for all scenarios
  """
  region_id: Int
}

type CustomerDownloadableProduct {
  date: String
  download_url: String
  order_increment_id: String
  remaining_downloads: String
  status: String
}

type CustomerDownloadableProducts {
  """List of purchased downloadable items"""
  items: [CustomerDownloadableProduct]
}

input CustomerInput {
  """The customer's date of birth"""
  date_of_birth: String

  """Deprecated: Use `date_of_birth` instead"""
  dob: String

  """The customer's email address. Required for customer creation"""
  email: String

  """The customer's first name"""
  firstname: String

  """The customer's gender (Male - 1, Female - 2)"""
  gender: Int

  """
  Indicates whether the customer is subscribed to the company's newsletter
  """
  is_subscribed: Boolean

  """The customer's family name"""
  lastname: String

  """The customer's middle name"""
  middlename: String

  """The customer's password"""
  password: String

  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String

  """A value such as Sr., Jr., or III"""
  suffix: String

  """The customer's Tax/VAT number (for corporate customers)"""
  taxvat: String
}

"""Order mapping fields"""
type CustomerOrder {
  created_at: String
  grand_total: Float
  id: Int
  increment_id: String @deprecated(reason: "Use the order_number instead.")

  """The order number"""
  order_number: String!
  status: String
}

type CustomerOrders {
  """Array of orders"""
  items: [CustomerOrder]
}

type CustomerOutput {
  customer: Customer!
}

type CustomerPaymentTokens {
  """An array of payment tokens"""
  items: [PaymentToken]!
}

"""Contains store credit information with balance and history"""
type CustomerStoreCredit {
  """
  Customer Store credit balance history. If the history or store credit feature
  is disabled, then a null value will be returned.
  """
  balance_history(
    """
    Specifies the maximum number of results to return at once. This value is optional. The default value is 20
    """
    pageSize: Int = 20

    """
    Specifies which page of results to return. This value is optional. The default value is 1.
    """
    currentPage: Int = 1
  ): CustomerStoreCreditHistory

  """Current balance on store credit"""
  current_balance: Money

  """
  Indicates whether store credits are enabled. If the feature is disabled, then the balance will not be returned
  """
  enabled: Boolean
}

"""Lists changes to the amount of store credit available to the customer."""
type CustomerStoreCreditHistory {
  """
  An array containing information about changes to the store credit available to the customer.
  """
  items: [CustomerStoreCreditHistoryItem]

  """
  An object that includes the current_page page_info and page_size values specified in the query.
  """
  page_info: SearchResultPageInfo

  """The number of items returned."""
  total_count: Int
}

"""Defines store credit history information"""
type CustomerStoreCreditHistoryItem {
  """Action that was made on the store credit"""
  action: String

  """
  The store credit available to the customer as a result of this action. 
  """
  actual_balance: Money

  """
  The amount added to or subtracted from the store credit as a result of this action.
  """
  balance_change: Money

  """Date and time when the store credit change was made"""
  date_time_changed: String
}

type CustomerToken {
  """The customer token"""
  token: String
}

"""
CustomizableAreaOption contains information about a text area that is defined as part of a customizable option.
"""
type CustomizableAreaOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int

  """The Stock Keeping Unit of the base product."""
  product_sku: String

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """An object that defines a text area."""
  value: CustomizableAreaValue
}

"""
CustomizableAreaValue defines the price and sku of a product whose page contains a customized text area.
"""
type CustomizableAreaValue {
  """
  The maximum number of characters that can be entered for this customizable option.
  """
  max_characters: Int

  """The price assigned to this option."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String
}

"""
CustomizableCheckbbixOption contains information about a set of checkbox values
that are defined as part of a customizable option.
"""
type CustomizableCheckboxOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """An array that defines a set of checkbox values."""
  value: [CustomizableCheckboxValue]
}

"""
CustomizableCheckboxValue defines the price and sku of a product whose page contains a customized set of checkbox values.
"""
type CustomizableCheckboxValue {
  """The ID assigned to the value."""
  option_type_id: Int

  """The price assigned to this option."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String

  """The order in which the checkbox value is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String
}

"""
CustomizableDateOption contains information about a date picker that is defined as part of a customizable option.
"""
type CustomizableDateOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int

  """The Stock Keeping Unit of the base product."""
  product_sku: String

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """An object that defines a date field in a customizable option."""
  value: CustomizableDateValue
}

"""
CustomizableDateValue defines the price and sku of a product whose page contains a customized date picker.
"""
type CustomizableDateValue {
  """The price assigned to this option."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String
}

"""
CustomizableDropDownOption contains information about a drop down menu that is defined as part of a customizable option.
"""
type CustomizableDropDownOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """An array that defines the set of options for a drop down menu."""
  value: [CustomizableDropDownValue]
}

"""
CustomizableDropDownValue defines the price and sku of a product whose page contains a customized drop down menu.
"""
type CustomizableDropDownValue {
  """The ID assigned to the value."""
  option_type_id: Int

  """The price assigned to this option."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String
}

"""
CustomizableFieldOption contains information about a text field that is defined as part of a customizable option.
"""
type CustomizableFieldOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int

  """The Stock Keeping Unit of the base product."""
  product_sku: String

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """An object that defines a text field."""
  value: CustomizableFieldValue
}

"""
CustomizableFieldValue defines the price and sku of a product whose page contains a customized text field.
"""
type CustomizableFieldValue {
  """
  The maximum number of characters that can be entered for this customizable option.
  """
  max_characters: Int

  """The price of the custom value."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String
}

"""
CustomizableFileOption contains information about a file picker that is defined as part of a customizable option.
"""
type CustomizableFileOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int

  """The Stock Keeping Unit of the base product."""
  product_sku: String

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """An object that defines a file value."""
  value: CustomizableFileValue
}

"""
CustomizableFileValue defines the price and sku of a product whose page contains a customized file picker.
"""
type CustomizableFileValue {
  """The file extension to accept."""
  file_extension: String

  """The maximum width of an image."""
  image_size_x: Int

  """The maximum height of an image."""
  image_size_y: Int

  """The price assigned to this option."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String
}

"""
CustomizableMultipleOption contains information about a multiselect that is defined as part of a customizable option.
"""
type CustomizableMultipleOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """An array that defines the set of options for a multiselect."""
  value: [CustomizableMultipleValue]
}

"""
CustomizableMultipleValue defines the price and sku of a product whose page contains a customized multiselect.
"""
type CustomizableMultipleValue {
  """The ID assigned to the value."""
  option_type_id: Int

  """The price assigned to this option."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String
}

input CustomizableOptionInput {
  id: Int!
  value_string: String!
}

"""
The CustomizableOptionInterface contains basic information about a customizable
option. It can be implemented by several types of configurable options.
"""
interface CustomizableOptionInterface {
  """Option ID."""
  option_id: Int

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String
}

"""
CustomizableProductInterface contains information about customizable product options.
"""
interface CustomizableProductInterface {
  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]
}

"""
CustomizableRadioOption contains information about a set of radio buttons that are defined as part of a customizable option.
"""
type CustomizableRadioOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """An array that defines a set of radio buttons."""
  value: [CustomizableRadioValue]
}

"""
CustomizableRadioValue defines the price and sku of a product whose page contains a customized set of radio buttons.
"""
type CustomizableRadioValue {
  """The ID assigned to the value."""
  option_type_id: Int

  """The price assigned to this option."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String

  """The order in which the radio button is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String
}

type DeletePaymentTokenOutput {
  customerPaymentTokens: CustomerPaymentTokens
  result: Boolean!
}

"""
Defines an individual discount. A discount can be applied to the cart as a whole or to an item.
"""
type Discount {
  """The amount of the discount"""
  amount: Money!

  """A description of the discount"""
  label: String!
}

"""Downloadable Cart Item"""
type DownloadableCartItem implements CartItemInterface {
  customizable_options: [SelectedCustomizableOption]
  id: String!

  """
  An array containing information about the links for the added to cart downloadable product
  """
  links: [DownloadableProductLinks]
  prices: CartItemPrices
  product: ProductInterface!
  quantity: Float!

  """
  DownloadableProductSamples defines characteristics of a downloadable product
  """
  samples: [DownloadableProductSamples]
}

enum DownloadableFileTypeEnum {
  FILE @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  URL @deprecated(reason: "`sample_url` serves to get the downloadable sample")
}

"""DownloadableProduct defines a product that the customer downloads"""
type DownloadableProduct implements ProductInterface & CustomizableProductInterface {
  """The attribute set assigned to the product."""
  attribute_set_id: Int

  """
  Relative canonical URL. This value is returned only if the system setting 'Use
  Canonical Link Meta Tag For Products' is enabled
  """
  canonical_url: String
  capsules: Int

  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: String
  coravin_at_a_glance: String
  coravin_autodelivery: String
  coravin_compare: String
  coravin_comparison_chart: String
  coravin_custom_info: String
  coravin_demooz: String
  coravin_exclusive: String
  coravin_faqs: String
  coravin_features: String
  coravin_getting_started: String
  coravin_market: String
  coravin_powerreviews_id: String
  coravin_tech_specs: String
  coravin_usage_tips: String
  coravin_why_capsules: String

  """The product's country of origin."""
  country_of_manufacture: String

  """Timestamp indicating when the product was created."""
  created_at: String

  """Crosssell Products"""
  crosssell_products: [ProductInterface]

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue

  """
  An array containing information about the links for this downloadable product
  """
  downloadable_product_links: [DownloadableProductLinks]

  """
  An array containing information about samples of this downloadable product.
  """
  downloadable_product_samples: [DownloadableProductSamples]

  """Indicates whether a gift message is available."""
  gift_message_available: String

  """The ID number assigned to the product."""
  id: Int

  """The relative path to the main image on the product page."""
  image: ProductImage
  is_featured: Int

  """Indicates whether the product can be returned"""
  is_returnable: String

  """
  A value of 1 indicates that each link in the array must be purchased separately
  """
  links_purchased_separately: Int

  """The heading above the list of downloadable products"""
  links_title: String

  """A number representing the product's manufacturer."""
  manufacturer: Int

  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]

  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  mirakl_mcm_is_operator_master: Int
  mirakl_mcm_product_id: String
  mirakl_offer_state_ids: String
  mirakl_shop_ids: String
  mirakl_sync: Int

  """The product name. Customers use this name to identify the product."""
  name: String

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  new_product: Int

  """The end date for new product listings."""
  new_to_date: String

  """Product stock only x left count"""
  only_x_left_in_stock: Float

  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  persona: String
  pr_asin: String

  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")

  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!

  """An array of TierPrice objects."""
  price_tiers: [TierPrice]
  product_family: String

  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]
  product_sort_order: String

  """Related Products"""
  related_products: [ProductInterface]

  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String

  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage

  """The beginning date that a product has a special price."""
  special_from_date: String

  """The discounted price of the product."""
  special_price: Float

  """The end date that a product has a special price."""
  special_to_date: String

  """Stock status of the product"""
  stock_status: ProductStockStatus
  style: String

  """The file name of a swatch image"""
  swatch_image: String

  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")

  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")

  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use __typename instead.")
  type_of_product: Int
  upc_code: String

  """Timestamp indicating when the product was updated."""
  updated_at: String

  """Upsell Products"""
  upsell_products: [ProductInterface]

  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")

  """URL rewrites list"""
  url_rewrites: [UrlRewrite]

  """The part of the product URL that is appended after the url key"""
  url_suffix: String

  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
}

input DownloadableProductCartItemInput {
  customizable_options: [CustomizableOptionInput]
  data: CartItemInput!
  downloadable_product_links: [DownloadableProductLinksInput]
}

"""
DownloadableProductLinks defines characteristics of a downloadable product
"""
type DownloadableProductLinks {
  id: Int @deprecated(reason: "This information should not be exposed on frontend")
  is_shareable: Boolean @deprecated(reason: "This information should not be exposed on frontend")
  link_type: DownloadableFileTypeEnum @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  number_of_downloads: Int @deprecated(reason: "This information should not be exposed on frontend")

  """The price of the downloadable product"""
  price: Float
  sample_file: String @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  sample_type: DownloadableFileTypeEnum @deprecated(reason: "`sample_url` serves to get the downloadable sample")

  """URL to the downloadable sample"""
  sample_url: String

  """A number indicating the sort order"""
  sort_order: Int

  """The display name of the link"""
  title: String
}

input DownloadableProductLinksInput {
  link_id: Int!
}

"""
DownloadableProductSamples defines characteristics of a downloadable product
"""
type DownloadableProductSamples {
  id: Int @deprecated(reason: "This information should not be exposed on frontend")
  sample_file: String @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  sample_type: DownloadableFileTypeEnum @deprecated(reason: "`sample_url` serves to get the downloadable sample")

  """URL to the downloadable sample"""
  sample_url: String

  """A number indicating the sort order"""
  sort_order: Int

  """The display name of the sample"""
  title: String
}

"""
EntityUrl is an output object containing the `id`, `relative_url`, and `type` attributes
"""
type EntityUrl {
  canonical_url: String @deprecated(reason: "The canonical_url field is deprecated, use relative_url instead.")

  """
  The ID assigned to the object associated with the specified url. This could be a product ID, category ID, or page ID.
  """
  id: Int

  """
  301 or 302 HTTP code for url permanent or temporary redirect or 0 for the 200 no redirect
  """
  redirectCode: Int

  """
  The internal relative URL. If the specified  url is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String

  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
}

type ExchangeRate {
  currency_to: String
  rate: Float
}

"""Defines a filter that matches the input exactly."""
input FilterEqualTypeInput {
  """A string to filter on"""
  eq: String

  """An array of values to filter on"""
  in: [String]
}

"""Defines a filter that performs a fuzzy search."""
input FilterMatchTypeInput {
  """One or more words to filter on"""
  match: String
}

"""
Defines a filter that matches a range of values, such as prices or dates.
"""
input FilterRangeTypeInput {
  """The beginning of the range"""
  from: String

  """The end of the range"""
  to: String
}

"""FilterTypeInput specifies which action will be performed in a query """
input FilterTypeInput {
  """Equals"""
  eq: String
  finset: [String]

  """From. Must be used with 'to'"""
  from: String

  """Greater than"""
  gt: String

  """Greater than or equal to"""
  gteq: String

  """In. The value can contain a set of comma-separated values"""
  in: [String]

  """
  Like. The specified value can contain % (percent signs) to allow matching of 0 or more characters
  """
  like: String

  """Less than"""
  lt: String

  """Less than or equal to"""
  lteq: String

  """More than or equal to"""
  moreq: String

  """Not equal to"""
  neq: String

  """Not in. The value can contain a set of comma-separated values"""
  nin: [String]

  """Not null"""
  notnull: String

  """Is null"""
  null: String

  """To. Must be used with 'from'"""
  to: String
}

"""A single FPT that can be applied to a product price."""
type FixedProductTax {
  """Amount of the FPT as a money object."""
  amount: Money

  """The label assigned to the FPT to be displayed on the frontend."""
  label: String
}

"""This enumeration display settings for the fixed product tax"""
enum FixedProductTaxDisplaySettings {
  """
  The displayed price includes the FPT amount without displaying the
  ProductPrice.fixed_product_taxes values. This value corresponds to 'Including FPT only'
  """
  INCLUDE_FPT_WITHOUT_DETAILS

  """
  The displayed price includes the FPT amount while displaying the values of
  ProductPrice.fixed_product_taxes separately. This value corresponds to
  'Including FPT and FPT description'
  """
  INCLUDE_FPT_WITH_DETAILS

  """
  The displayed price does not include the FPT amount. The values of
  ProductPrice.fixed_product_taxes and the price including the FPT are displayed
  separately. This value corresponds to 'Excluding FPT, Including FPT
  description and final price'
  """
  EXCLUDE_FPT_AND_INCLUDE_WITH_DETAILS

  """
  The displayed price does not include the FPT amount. The values from
  ProductPrice.fixed_product_taxes are not displayed. This value corresponds to
  'Excluding FPT'
  """
  EXCLUDE_FPT_WITHOUT_DETAILS

  """
  The FPT feature is not enabled. You can omit  ProductPrice.fixed_product_taxes from your query
  """
  FPT_DISABLED
}

"""Contains details about the gift card account"""
type GiftCardAccount {
  """Balance remaining on gift card"""
  balance: Money

  """Gift card account code"""
  code: String

  """Gift card expiration date"""
  expiration_date: String
}

input GiftCardAccountInput {
  """Defines the input required to identify the gift card account"""
  gift_card_code: String!
}

"""
GiftCardAmounts contains the value of a gift card, the website that generated the card, and related information
"""
type GiftCardAmounts {
  """An internal attribute ID."""
  attribute_id: Int

  """The value of the gift card"""
  value: Float

  """An ID that is assigned to each unique gift card amount."""
  value_id: Int

  """ID of the website that generated the gift card"""
  website_id: Int

  """The value of the gift card"""
  website_value: Float
}

"""
GiftCardProduct defines properties of a gift card, including the minimum and
maximum values and an array that contains the current and past values on the
specific gift card
"""
type GiftCardProduct implements ProductInterface & PhysicalProductInterface & CustomizableProductInterface {
  """
  Indicates whether the customer can provide a message to accompany the gift card.
  """
  allow_message: Boolean

  """
  Indicates whether customers have the ability to set the value of the gift card.
  """
  allow_open_amount: Boolean

  """The attribute set assigned to the product."""
  attribute_set_id: Int

  """
  Relative canonical URL. This value is returned only if the system setting 'Use
  Canonical Link Meta Tag For Products' is enabled
  """
  canonical_url: String
  capsules: Int

  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: String
  coravin_at_a_glance: String
  coravin_autodelivery: String
  coravin_compare: String
  coravin_comparison_chart: String
  coravin_custom_info: String
  coravin_demooz: String
  coravin_exclusive: String
  coravin_faqs: String
  coravin_features: String
  coravin_getting_started: String
  coravin_market: String
  coravin_powerreviews_id: String
  coravin_tech_specs: String
  coravin_usage_tips: String
  coravin_why_capsules: String

  """The product's country of origin."""
  country_of_manufacture: String

  """Timestamp indicating when the product was created."""
  created_at: String

  """Crosssell Products"""
  crosssell_products: [ProductInterface]

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue

  """Indicates whether a gift message is available."""
  gift_message_available: String

  """
  An array that contains information about the values and ID of a gift card.
  """
  giftcard_amounts: [GiftCardAmounts]

  """Either VIRTUAL, PHYSICAL, or COMBINED."""
  giftcard_type: GiftCardTypeEnum

  """The ID number assigned to the product."""
  id: Int

  """The relative path to the main image on the product page."""
  image: ProductImage
  is_featured: Int

  """
  Indicates whether the customer can redeem the value on the card for cash.
  """
  is_redeemable: Boolean

  """Indicates whether the product can be returned"""
  is_returnable: String

  """
  The number of days after purchase until the gift card expires. A null value means there is no limit.
  """
  lifetime: Int

  """A number representing the product's manufacturer."""
  manufacturer: Int

  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]

  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")

  """
  Indicates whether the customer can provide a message to accompany the gift card.
  """
  message_max_length: Int

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  mirakl_mcm_is_operator_master: Int
  mirakl_mcm_product_id: String
  mirakl_offer_state_ids: String
  mirakl_shop_ids: String
  mirakl_sync: Int

  """The product name. Customers use this name to identify the product."""
  name: String

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  new_product: Int

  """The end date for new product listings."""
  new_to_date: String

  """Product stock only x left count"""
  only_x_left_in_stock: Float

  """The minimum acceptable value of an open amount gift card."""
  open_amount_max: Float

  """The minimum acceptable value of an open amount gift card."""
  open_amount_min: Float

  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  persona: String
  pr_asin: String

  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")

  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!

  """An array of TierPrice objects."""
  price_tiers: [TierPrice]
  product_family: String

  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]
  product_sort_order: String

  """Related Products"""
  related_products: [ProductInterface]

  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String

  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage

  """The beginning date that a product has a special price."""
  special_from_date: String

  """The discounted price of the product."""
  special_price: Float

  """The end date that a product has a special price."""
  special_to_date: String

  """Stock status of the product"""
  stock_status: ProductStockStatus
  style: String

  """The file name of a swatch image"""
  swatch_image: String

  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")

  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")

  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use __typename instead.")
  type_of_product: Int
  upc_code: String

  """Timestamp indicating when the product was updated."""
  updated_at: String

  """Upsell Products"""
  upsell_products: [ProductInterface]

  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")

  """URL rewrites list"""
  url_rewrites: [UrlRewrite]

  """The part of the product URL that is appended after the url key"""
  url_suffix: String

  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")

  """The weight of the item, in units defined by the store."""
  weight: Float
}

"""This enumeration defines the types of gift cards"""
enum GiftCardTypeEnum {
  VIRTUAL
  PHYSICAL
  COMBINED
}

"""GroupedProduct defines a grouped product"""
type GroupedProduct implements ProductInterface & PhysicalProductInterface {
  """The attribute set assigned to the product."""
  attribute_set_id: Int

  """
  Relative canonical URL. This value is returned only if the system setting 'Use
  Canonical Link Meta Tag For Products' is enabled
  """
  canonical_url: String
  capsules: Int

  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: String
  coravin_at_a_glance: String
  coravin_autodelivery: String
  coravin_compare: String
  coravin_comparison_chart: String
  coravin_custom_info: String
  coravin_demooz: String
  coravin_exclusive: String
  coravin_faqs: String
  coravin_features: String
  coravin_getting_started: String
  coravin_market: String
  coravin_powerreviews_id: String
  coravin_tech_specs: String
  coravin_usage_tips: String
  coravin_why_capsules: String

  """The product's country of origin."""
  country_of_manufacture: String

  """Timestamp indicating when the product was created."""
  created_at: String

  """Crosssell Products"""
  crosssell_products: [ProductInterface]

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue

  """Indicates whether a gift message is available."""
  gift_message_available: String

  """The ID number assigned to the product."""
  id: Int

  """The relative path to the main image on the product page."""
  image: ProductImage
  is_featured: Int

  """Indicates whether the product can be returned"""
  is_returnable: String

  """An array containing grouped product items"""
  items: [GroupedProductItem]

  """A number representing the product's manufacturer."""
  manufacturer: Int

  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]

  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  mirakl_mcm_is_operator_master: Int
  mirakl_mcm_product_id: String
  mirakl_offer_state_ids: String
  mirakl_shop_ids: String
  mirakl_sync: Int

  """The product name. Customers use this name to identify the product."""
  name: String

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  new_product: Int

  """The end date for new product listings."""
  new_to_date: String

  """Product stock only x left count"""
  only_x_left_in_stock: Float

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  persona: String
  pr_asin: String

  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")

  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!

  """An array of TierPrice objects."""
  price_tiers: [TierPrice]
  product_family: String

  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]
  product_sort_order: String

  """Related Products"""
  related_products: [ProductInterface]

  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String

  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage

  """The beginning date that a product has a special price."""
  special_from_date: String

  """The discounted price of the product."""
  special_price: Float

  """The end date that a product has a special price."""
  special_to_date: String

  """Stock status of the product"""
  stock_status: ProductStockStatus
  style: String

  """The file name of a swatch image"""
  swatch_image: String

  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")

  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")

  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use __typename instead.")
  type_of_product: Int
  upc_code: String

  """Timestamp indicating when the product was updated."""
  updated_at: String

  """Upsell Products"""
  upsell_products: [ProductInterface]

  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")

  """URL rewrites list"""
  url_rewrites: [UrlRewrite]

  """The part of the product URL that is appended after the url key"""
  url_suffix: String

  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")

  """The weight of the item, in units defined by the store."""
  weight: Float
}

"""
GroupedProductItem contains information about an individual grouped product item
"""
type GroupedProductItem {
  """The relative position of this item compared to the other group items"""
  position: Int

  """
  The ProductInterface object, which contains details about this product option
  """
  product: ProductInterface

  """The quantity of this grouped product item"""
  qty: Float
}

"""
A set of relative URLs that PayPal will use in response to various actions
during the authorization process. Magento prepends the base URL to this value to
create a full URL. For example, if the full URL is
https://www.example.com/path/to/page.html, the relative URL is
path/to/page.html. Use this input for Payments Pro Hosted Solution payment method.
"""
input HostedProInput {
  """
  The relative URL of the page that PayPal will redirect to when the buyer
  cancels the transaction in order to choose a different payment method. If the
  full URL to this page is https://www.example.com/paypal/action/cancel.html,
  the relative URL is paypal/action/cancel.html.
  """
  cancel_url: String!

  """
  The relative URL of the final confirmation page that PayPal will redirect to
  upon payment success. If the full URL to this page is
  https://www.example.com/paypal/action/return.html, the relative URL is
  paypal/action/return.html.
  """
  return_url: String!
}

type HostedProUrl {
  """Secure Url generated by PayPal"""
  secure_form_url: String
}

"""
The required input to request the secure URL for Payments Pro Hosted Solution payment.
"""
input HostedProUrlInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String!
}

"""The object details of target path parameters"""
type HttpQueryParameter {
  """Parameter name"""
  name: String

  """Parameter value"""
  value: String
}

type ImageSwatchData implements SwatchDataInterface {
  """Thumbnail swatch image URL"""
  thumbnail: String

  """Value of swatch item (HEX color code, image link or textual value)"""
  value: String
}

type IsEmailAvailableOutput {
  """Is email availabel value"""
  is_email_available: Boolean
}

type LayerFilter {
  """Array of filter items."""
  filter_items: [LayerFilterItemInterface] @deprecated(reason: "Use Aggregation.options instead.")

  """Count of filter items in filter group."""
  filter_items_count: Int @deprecated(reason: "Use Aggregation.count instead.")

  """Layered navigation filter name."""
  name: String @deprecated(reason: "Use Aggregation.label instead.")

  """Request variable name for filter query."""
  request_var: String @deprecated(reason: "Use Aggregation.attribute_code instead.")
}

type LayerFilterItem implements LayerFilterItemInterface {
  """Count of items by filter."""
  items_count: Int @deprecated(reason: "Use AggregationOption.count instead.")

  """Filter label."""
  label: String @deprecated(reason: "Use AggregationOption.label instead.")

  """Value for filter request variable to be used in query."""
  value_string: String @deprecated(reason: "Use AggregationOption.value instead.")
}

interface LayerFilterItemInterface {
  """Count of items by filter."""
  items_count: Int @deprecated(reason: "Use AggregationOption.count instead.")

  """Filter label."""
  label: String @deprecated(reason: "Use AggregationOption.label instead.")

  """Value for filter request variable to be used in query."""
  value_string: String @deprecated(reason: "Use AggregationOption.value instead.")
}

"""
MediaGalleryEntry defines characteristics about images and videos associated with a specific product.
"""
type MediaGalleryEntry {
  """Contains a ProductMediaGalleryEntriesContent object."""
  content: ProductMediaGalleryEntriesContent

  """Whether the image is hidden from view."""
  disabled: Boolean

  """The path of the image on the server."""
  file: String

  """The identifier assigned to the object."""
  id: Int

  """The alt text displayed on the UI when the user points to the image."""
  label: String

  """image or video."""
  media_type: String

  """The media item's position after it has been sorted."""
  position: Int

  """
  Array of image types. It can have the following values: image, small_image, thumbnail.
  """
  types: [String]

  """Contains a ProductMediaGalleryEntriesVideoContent object."""
  video_content: ProductMediaGalleryEntriesVideoContent
}

"""Contains basic information about a product image or video."""
interface MediaGalleryInterface {
  """Whether the image is hidden from view."""
  disabled: Boolean

  """The label of the product image or video."""
  label: String

  """The media item's position after it has been sorted."""
  position: Int

  """The URL of the product image or video."""
  url: String
}

"""
A Money object defines a monetary value, including a numeric value and a currency code.
"""
type Money {
  """A three-letter currency code, such as USD or EUR"""
  currency: CurrencyEnum

  """A number expressing a monetary value"""
  value: Float
}

type Mutation {
  addBundleProductsToCart(input: AddBundleProductsToCartInput): AddBundleProductsToCartOutput
  addConfigurableProductsToCart(input: AddConfigurableProductsToCartInput): AddConfigurableProductsToCartOutput
  addDownloadableProductsToCart(input: AddDownloadableProductsToCartInput): AddDownloadableProductsToCartOutput
  addSimpleProductsToCart(input: AddSimpleProductsToCartInput): AddSimpleProductsToCartOutput
  addVirtualProductsToCart(input: AddVirtualProductsToCartInput): AddVirtualProductsToCartOutput
  applyCouponToCart(input: ApplyCouponToCartInput): ApplyCouponToCartOutput

  """Apply a pre-defined gift card code to the specified cart."""
  applyGiftCardToCart(input: ApplyGiftCardToCartInput): ApplyGiftCardToCartOutput

  """Apply store credit to the specified cart."""
  applyStoreCreditToCart(input: ApplyStoreCreditToCartInput!): ApplyStoreCreditToCartOutput

  """Changes the password for the logged-in customer"""
  changeCustomerPassword(currentPassword: String!, newPassword: String!): Customer

  """Creates Client Token for Braintree Javascript SDK initialization."""
  createBraintreeClientToken: String!

  """Create customer account"""
  createCustomer(input: CustomerInput!): CustomerOutput

  """Create customer address"""
  createCustomerAddress(input: CustomerAddressInput!): CustomerAddress

  """Creates an empty shopping cart for a guest or logged in user"""
  createEmptyCart(input: createEmptyCartInput): String

  """
  Initiates a transaction and receives a token. Use this mutation for Payflow Pro and Payments Pro payment methods
  """
  createPayflowProToken(input: PayflowProTokenInput!): CreatePayflowProTokenOutput

  """
  Initiates an Express Checkout transaction and receives a token. Use this
  mutation for Express Checkout and Payments Standard payment methods.
  """
  createPaypalExpressToken(input: PaypalExpressTokenInput!): PaypalExpressTokenOutput

  """Delete customer address"""
  deleteCustomerAddress(id: Int!): Boolean

  """Delete a customer payment token"""
  deletePaymentToken(public_hash: String!): DeletePaymentTokenOutput

  """Retrieve the customer token"""
  generateCustomerToken(email: String!, password: String!): CustomerToken

  """
  Handles payment response and saves payment in Quote. Use this mutations for Payflow Pro and Payments Pro payment methods.
  """
  handlePayflowProResponse(input: PayflowProResponseInput!): PayflowProResponseOutput

  """Merges the source cart into the destination cart"""
  mergeCarts(source_cart_id: String!, destination_cart_id: String!): Cart!
  placeOrder(input: PlaceOrderInput): PlaceOrderOutput

  """Redeem gift card for store credit."""
  redeemGiftCardBalanceAsStoreCredit(input: GiftCardAccountInput!): GiftCardAccount
  removeCouponFromCart(input: RemoveCouponFromCartInput): RemoveCouponFromCartOutput
  removeGiftCardFromCart(input: RemoveGiftCardFromCartInput): RemoveGiftCardFromCartOutput
  removeItemFromCart(input: RemoveItemFromCartInput): RemoveItemFromCartOutput

  """Remove applied store credit from the specified cart."""
  removeStoreCreditFromCart(input: RemoveStoreCreditFromCartInput!): RemoveStoreCreditFromCartOutput

  """Revoke the customer token"""
  revokeCustomerToken: RevokeCustomerTokenOutput

  """Recommends Product by Sending Single/Multiple Email"""
  sendEmailToFriend(input: SendEmailToFriendInput): SendEmailToFriendOutput
  setBillingAddressOnCart(input: SetBillingAddressOnCartInput): SetBillingAddressOnCartOutput
  setGuestEmailOnCart(input: SetGuestEmailOnCartInput): SetGuestEmailOnCartOutput
  setPaymentMethodAndPlaceOrder(input: SetPaymentMethodAndPlaceOrderInput): PlaceOrderOutput @deprecated(reason: "Should use setPaymentMethodOnCart and placeOrder mutations in single request.")
  setPaymentMethodOnCart(input: SetPaymentMethodOnCartInput): SetPaymentMethodOnCartOutput
  setShippingAddressesOnCart(input: SetShippingAddressesOnCartInput): SetShippingAddressesOnCartOutput
  setShippingMethodsOnCart(input: SetShippingMethodsOnCartInput): SetShippingMethodsOnCartOutput
  updateCartItems(input: UpdateCartItemsInput): UpdateCartItemsOutput

  """Update the customer's personal information"""
  updateCustomer(input: CustomerInput!): CustomerOutput

  """Update customer address"""
  updateCustomerAddress(id: Int!, input: CustomerAddressInput): CustomerAddress
}

type Order {
  order_id: String @deprecated(reason: "The order_id field is deprecated, use order_number instead.")
  order_number: String!
}

"""Required input for Payflow Express Checkout payments"""
input PayflowExpressInput {
  """The unique ID of the PayPal user"""
  payer_id: String!

  """The token returned by the createPaypalExpressToken mutation"""
  token: String!
}

"""
A set of relative URLs that PayPal will use in response to various actions
during the authorization process. Magento prepends the base URL to this value to
create a full URL. For example, if the full URL is
https://www.example.com/path/to/page.html, the relative URL is
path/to/page.html. Use this input for Payflow Link and Payments Advanced payment methods.
"""
input PayflowLinkInput {
  """
  The relative URL of the page that PayPal will redirect to when the buyer
  cancels the transaction in order to choose a different payment method. If the
  full URL to this page is https://www.example.com/paypal/action/cancel.html,
  the relative URL is paypal/action/cancel.html.
  """
  cancel_url: String!

  """
  The relative URL of the transaction error page that PayPal will redirect to
  upon payment error. If the full URL to this page is
  https://www.example.com/paypal/action/error.html, the relative URL is
  paypal/action/error.html.
  """
  error_url: String!

  """
  The relative URL of the order confirmation page that PayPal will redirect to
  when the payment is successful and additional confirmation is not needed. If
  the full URL to this page is
  https://www.example.com/paypal/action/return.html, the relative URL is
  paypal/action/return.html.
  """
  return_url: String!
}

"""
Mode for payment: TEST or LIVE. Applies to Payflow Link and Payments Advanced payment methods.
"""
enum PayflowLinkMode {
  TEST
  LIVE
}

"""
Contains information used to generate PayPal iframe for transaction. Applies to
Payflow Link and Payments Advanced payment methods.
"""
type PayflowLinkToken {
  """Mode for Payflow transaction"""
  mode: PayflowLinkMode

  """PayPal URL used for requesting Payflow form"""
  paypal_url: String

  """Secure token generated by PayPal"""
  secure_token: String

  """Secure token ID generated by PayPal"""
  secure_token_id: String
}

"""
Input required to fetch payment token information for Payflow Link and Payments Advanced payment methods.
"""
input PayflowLinkTokenInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String!
}

"""Required input for Payflow Pro and Payments Pro payment methods."""
input PayflowProInput {
  """Required input for credit card related information"""
  cc_details: CreditCardDetailsInput!
}

"""
Input required to complete payment. Applies to Payflow Pro and Payments Pro payment methods.
"""
input PayflowProResponseInput {
  cart_id: String!
  paypal_payload: String!
}

type PayflowProResponseOutput {
  cart: Cart!
}

"""
Contains the secure information used to authorize transaction. Applies to Payflow Pro and Payments Pro payment methods.
"""
type PayflowProToken {
  response_message: String!
  result: Int!
  result_code: Int!
  secure_token: String!
  secure_token_id: String!
}

"""
Input required to fetch payment token information for Payflow Pro and Payments Pro payment methods.
"""
input PayflowProTokenInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String!

  """A set of relative URLs that PayPal uses for callback."""
  urls: PayflowProUrlInput!
}

"""
A set of relative URLs that PayPal will use in response to various actions
during the authorization process. Magento prepends the base URL to this value to
create a full URL. For example, if the full URL is
https://www.example.com/path/to/page.html, the relative URL is
path/to/page.html. Use this input for Payflow Pro and Payment Pro payment methods.
"""
input PayflowProUrlInput {
  """
  The relative URL of the page that PayPal will redirect to when the buyer
  cancels the transaction in order to choose a different payment method. If the
  full URL to this page is https://www.example.com/paypal/action/cancel.html,
  the relative URL is paypal/action/cancel.html.
  """
  cancel_url: String!

  """
  The relative URL of the transaction error page that PayPal will redirect to
  upon payment error. If the full URL to this page is
  https://www.example.com/paypal/action/error.html, the relative URL is
  paypal/action/error.html.
  """
  error_url: String!

  """
  The relative URL of the final confirmation page that PayPal will redirect to
  upon payment success. If the full URL to this page is
  https://www.example.com/paypal/action/return.html, the relative URL is
  paypal/action/return.html.
  """
  return_url: String!
}

input PaymentMethodInput {
  """Defines the required attributes for Authorize.Net payments"""
  authorizenet_acceptjs: AuthorizenetInput
  braintree: BraintreeInput
  braintree_cc_vault: BraintreeCcVaultInput

  """Payment method code"""
  code: String!

  """Required input for PayPal Hosted pro payments"""
  hosted_pro: HostedProInput

  """Required input for Payflow Express Checkout payments"""
  payflow_express: PayflowExpressInput

  """Required input for PayPal Payflow Link and Payments Advanced payments"""
  payflow_link: PayflowLinkInput

  """Required input type for PayPal Payflow Pro and Payment Pro payments"""
  payflowpro: PayflowProInput

  """Required input for Express Checkout and Payments Standard payments"""
  paypal_express: PaypalExpressInput

  """Purchase order number"""
  purchase_order_number: String
}

"""The stored payment method available to the customer"""
type PaymentToken {
  """Stored account details"""
  details: String

  """The payment method code associated with the token"""
  payment_method_code: String!

  """The public hash of the token"""
  public_hash: String!
  type: PaymentTokenTypeEnum!
}

"""The list of available payment token types"""
enum PaymentTokenTypeEnum {
  card
  account
}

"""Required input for Express Checkout and Payments Standard payments"""
input PaypalExpressInput {
  """The unique ID of the PayPal user"""
  payer_id: String!

  """The token returned by the createPaypalExpressToken mutation"""
  token: String!
}

"""Deprecated: use type `PaypalExpressTokenOutput` instead"""
type PaypalExpressToken {
  """
  A set of URLs that allow the buyer to authorize payment and adjust checkout details
  """
  paypal_urls: PaypalExpressUrlList @deprecated(reason: "Use field `paypal_urls` of type `PaypalExpressTokenOutput` instead")

  """The token returned by PayPal"""
  token: String @deprecated(reason: "Use field `token` of type `PaypalExpressTokenOutput` instead")
}

"""
Defines the attributes required to receive a payment token for Express Checkout and Payments Standard payment methods.
"""
input PaypalExpressTokenInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String!

  """Payment method code"""
  code: String!

  """
  Indicates whether the buyer selected the quick checkout button. The default value is false
  """
  express_button: Boolean

  """
  A set of relative URLs that PayPal uses in response to various actions during the authorization process
  """
  urls: PaypalExpressUrlsInput!

  """
  Indicates whether the buyer clicked the PayPal credit button. The default value is false
  """
  use_paypal_credit: Boolean
}

"""
Contains the token returned by PayPal and a set of URLs that allow the buyer to
authorize payment and adjust checkout details. Applies to Express Checkout and
Payments Standard payment methods.
"""
type PaypalExpressTokenOutput {
  """
  A set of URLs that allow the buyer to authorize payment and adjust checkout details
  """
  paypal_urls: PaypalExpressUrlList

  """The token returned by PayPal"""
  token: String
}

"""
A set of URLs that allow the buyer to authorize payment and adjust checkout
details for Express Checkout and Payments Standard transactions.
"""
type PaypalExpressUrlList {
  """The PayPal URL that allows the buyer to edit their checkout details"""
  edit: String

  """The URL to the PayPal login page"""
  start: String
}

"""
A set of relative URLs that PayPal will use in response to various actions
during the authorization process. Magento prepends the base URL to this value to
create a full URL. For example, if the full URL is
https://www.example.com/path/to/page.html, the relative URL is
path/to/page.html. Use this input for Express Checkout and Payments Standard
payment methods.
"""
input PaypalExpressUrlsInput {
  """
  The relative URL of the page that PayPal will redirect to when the buyer
  cancels the transaction in order to choose a different payment method. If the
  full URL to this page is https://www.example.com/paypal/action/cancel.html,
  the relative URL is paypal/action/cancel.html.
  """
  cancel_url: String!

  """
  The relative URL of the page that PayPal will redirect to when the payment has
  been put on hold for additional review. This condition mostly applies to ACH
  transactions, and is not applicable to most PayPal solutions. If the full URL
  to this page is https://www.example.com/paypal/action/success_pending.html,
  the relative URL is paypal/action/success_pending.html. 
  """
  pending_url: String

  """
  The relative URL of the final confirmation page that PayPal will redirect to
  upon payment success. If the full URL to this page is
  https://www.example.com/paypal/action/return.html, the relative URL is
  paypal/action/return.html.
  """
  return_url: String!

  """
  The relative URL of the order confirmation page that PayPal will redirect to
  when the payment is successful and additional confirmation is not needed. Not
  applicable to most PayPal solutions. If the full URL to this page is
  https://www.example.com/paypal/action/success.html, the relative URL is
  paypal/action/success.html.
  """
  success_url: String
}

"""
PhysicalProductInterface contains attributes specific to tangible products.
"""
interface PhysicalProductInterface {
  """The weight of the item, in units defined by the store."""
  weight: Float
}

input PlaceOrderInput {
  cart_id: String!
}

type PlaceOrderOutput {
  order: Order!
}

"""
Price is deprecated, replaced by ProductPrice. The Price object defines the
price of a product as well as any tax-related adjustments.
"""
type Price {
  """
  An array that provides information about tax, weee, or weee_tax adjustments.
  """
  adjustments: [PriceAdjustment] @deprecated(reason: "Price is deprecated, use ProductPrice.")

  """The price of a product plus a three-letter currency code."""
  amount: Money @deprecated(reason: "Price is deprecated, use ProductPrice.")
}

"""
PriceAdjustment is deprecated. Taxes will be included or excluded in the price.
The PricedAdjustment object defines the amount of money to apply as an
adjustment, the type of adjustment to apply, and whether the item is included or
excluded from the adjustment.
"""
type PriceAdjustment {
  """The amount of the price adjustment and its currency code."""
  amount: Money

  """Indicates whether the adjustment involves tax, weee, or weee_tax."""
  code: PriceAdjustmentCodesEnum @deprecated(reason: "PriceAdjustment is deprecated.")

  """
  Indicates whether the entity described by the code attribute is included or excluded from the adjustment.
  """
  description: PriceAdjustmentDescriptionEnum @deprecated(reason: "PriceAdjustment is deprecated.")
}

"""
PriceAdjustment.code is deprecated. This enumeration contains values defined in modules other than the Catalog module.
"""
enum PriceAdjustmentCodesEnum {
  TAX @deprecated(reason: "PriceAdjustmentCodesEnum is deprecated. Tax is included or excluded in price. Tax is not shown separtely in Catalog")
  WEEE @deprecated(reason: "WEEE code is deprecated, use fixed_product_taxes.label")
  WEEE_TAX @deprecated(reason: "Use fixed_product_taxes. PriceAdjustmentCodesEnum is deprecated. Tax is included or excluded in price. Tax is not shown separtely in Catalog")
}

"""
PriceAdjustmentDescriptionEnum is deprecated. This enumeration states whether a price adjustment is included or excluded.
"""
enum PriceAdjustmentDescriptionEnum {
  INCLUDED
  EXCLUDED
}

"""
Price range for a product. If the product has a single price, the minimum and maximum price will be the same.
"""
type PriceRange {
  """The highest possible price for the product."""
  maximum_price: ProductPrice

  """The lowest possible price for the product."""
  minimum_price: ProductPrice!
}

"""This enumeration the price type."""
enum PriceTypeEnum {
  FIXED
  PERCENT
  DYNAMIC
}

"""
This enumeration defines whether a bundle product's price is displayed as the lowest possible value or as a range.
"""
enum PriceViewEnum {
  PRICE_RANGE
  AS_LOW_AS
}

"""
ProductAttributeFilterInput defines the filters to be used in the search. A
filter contains at least one attribute, a comparison operator, and the value
that is being searched for.
"""
input ProductAttributeFilterInput {
  """Filter product by category id"""
  category_id: FilterEqualTypeInput

  """Attribute label: Color"""
  color: FilterEqualTypeInput

  """Attribute label: Description"""
  description: FilterMatchTypeInput

  """Attribute label: Offer Conditions"""
  mirakl_offer_state_ids: FilterEqualTypeInput

  """Attribute label: Shops"""
  mirakl_shop_ids: FilterEqualTypeInput

  """Attribute label: Product Name"""
  name: FilterMatchTypeInput

  """Attribute label: ASIN value for Amazon review"""
  pr_asin: FilterMatchTypeInput

  """Attribute label: Price"""
  price: FilterRangeTypeInput

  """Attribute label: Product Family"""
  product_family: FilterEqualTypeInput

  """Attribute label: Short Description"""
  short_description: FilterMatchTypeInput

  """Attribute label: SKU"""
  sku: FilterEqualTypeInput

  """Attribute label: Style"""
  style: FilterEqualTypeInput

  """Attribute label: Type of product"""
  type_of_product: FilterEqualTypeInput

  """Attribute label: UPC Code"""
  upc_code: FilterMatchTypeInput

  """The part of the URL that identifies the product"""
  url_key: FilterEqualTypeInput
}

"""
ProductAttributeSortInput specifies the attribute to use for sorting search
results and indicates whether the results are sorted in ascending or descending
order. It's possible to sort products using searchable attributes with enabled
'Use in Filter Options' option
"""
input ProductAttributeSortInput {
  """Attribute label: Color"""
  color: SortEnum

  """Attribute label: Product Name"""
  name: SortEnum

  """Sort by the position assigned to each product."""
  position: SortEnum

  """Attribute label: Price"""
  price: SortEnum

  """Sort by the search relevance score (default)."""
  relevance: SortEnum
}

"""A discount applied to a product price."""
type ProductDiscount {
  """The actual value of the discount."""
  amount_off: Float

  """The discount expressed a percentage."""
  percent_off: Float
}

"""
ProductFilterInput is deprecated, use @ProductAttributeFilterInput instead.
ProductFilterInput defines the filters to be used in the search. A filter
contains at least one attribute, a comparison operator, and the value that is
being searched for.
"""
input ProductFilterInput {
  """Category ID the product belongs to."""
  category_id: FilterTypeInput

  """The product's country of origin."""
  country_of_manufacture: FilterTypeInput

  """Timestamp indicating when the product was created."""
  created_at: FilterTypeInput

  """The name of a custom layout."""
  custom_layout: FilterTypeInput

  """XML code that is applied as a layout update to the product page."""
  custom_layout_update: FilterTypeInput

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: FilterTypeInput

  """Indicates whether a gift message is available."""
  gift_message_available: FilterTypeInput

  """
  Indicates whether additional attributes have been created for the product.
  """
  has_options: FilterTypeInput

  """The relative path to the main image on the product page."""
  image: FilterTypeInput

  """The label assigned to a product image."""
  image_label: FilterTypeInput

  """Indicates whether the product can be returned"""
  is_returnable: FilterTypeInput

  """A number representing the product's manufacturer."""
  manufacturer: FilterTypeInput

  """
  The numeric maximal price of the product. Do not include the currency code.
  """
  max_price: FilterTypeInput

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: FilterTypeInput

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: FilterTypeInput

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: FilterTypeInput

  """
  The numeric minimal price of the product. Do not include the currency code.
  """
  min_price: FilterTypeInput

  """The product name. Customers use this name to identify the product."""
  name: FilterTypeInput

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  news_from_date: FilterTypeInput

  """The end date for new product listings."""
  news_to_date: FilterTypeInput

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: FilterTypeInput

  """The keyword required to perform a logical OR comparison."""
  or: ProductFilterInput

  """The price of an item."""
  price: FilterTypeInput

  """Indicates whether the product has required options."""
  required_options: FilterTypeInput

  """A short description of the product. Its use depends on the theme."""
  short_description: FilterTypeInput

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: FilterTypeInput

  """The relative path to the small image, which is used on catalog pages."""
  small_image: FilterTypeInput

  """The label assigned to a product's small image."""
  small_image_label: FilterTypeInput

  """The beginning date that a product has a special price."""
  special_from_date: FilterTypeInput

  """The discounted price of the product. Do not include the currency code."""
  special_price: FilterTypeInput

  """The end date that a product has a special price."""
  special_to_date: FilterTypeInput

  """The file name of a swatch image"""
  swatch_image: FilterTypeInput

  """The relative path to the product's thumbnail image."""
  thumbnail: FilterTypeInput

  """The label assigned to a product's thumbnail image."""
  thumbnail_label: FilterTypeInput

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: FilterTypeInput

  """Timestamp indicating when the product was updated."""
  updated_at: FilterTypeInput

  """The part of the URL that identifies the product"""
  url_key: FilterTypeInput
  url_path: FilterTypeInput

  """The weight of the item, in units defined by the store."""
  weight: FilterTypeInput
}

"""Product image information. Contains the image URL and label."""
type ProductImage implements MediaGalleryInterface {
  """Whether the image is hidden from view."""
  disabled: Boolean

  """The label of the product image or video."""
  label: String

  """The media item's position after it has been sorted."""
  position: Int

  """The URL of the product image or video."""
  url: String
}

"""
The ProductInterface contains attributes that are common to all types of
products. Note that descriptions may not be available for custom and EAV attributes.
"""
interface ProductInterface {
  """The attribute set assigned to the product."""
  attribute_set_id: Int

  """
  Relative canonical URL. This value is returned only if the system setting 'Use
  Canonical Link Meta Tag For Products' is enabled
  """
  canonical_url: String
  capsules: Int

  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: String
  coravin_at_a_glance: String
  coravin_autodelivery: String
  coravin_compare: String
  coravin_comparison_chart: String
  coravin_custom_info: String
  coravin_demooz: String
  coravin_exclusive: String
  coravin_faqs: String
  coravin_features: String
  coravin_getting_started: String
  coravin_market: String
  coravin_powerreviews_id: String
  coravin_tech_specs: String
  coravin_usage_tips: String
  coravin_why_capsules: String

  """The product's country of origin."""
  country_of_manufacture: String

  """Timestamp indicating when the product was created."""
  created_at: String

  """Crosssell Products"""
  crosssell_products: [ProductInterface]

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue

  """Indicates whether a gift message is available."""
  gift_message_available: String

  """The ID number assigned to the product."""
  id: Int

  """The relative path to the main image on the product page."""
  image: ProductImage
  is_featured: Int

  """Indicates whether the product can be returned"""
  is_returnable: String

  """A number representing the product's manufacturer."""
  manufacturer: Int

  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]

  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  mirakl_mcm_is_operator_master: Int
  mirakl_mcm_product_id: String
  mirakl_offer_state_ids: String
  mirakl_shop_ids: String
  mirakl_sync: Int

  """The product name. Customers use this name to identify the product."""
  name: String

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  new_product: Int

  """The end date for new product listings."""
  new_to_date: String

  """Product stock only x left count"""
  only_x_left_in_stock: Float

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  persona: String
  pr_asin: String

  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")

  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!

  """An array of TierPrice objects."""
  price_tiers: [TierPrice]
  product_family: String

  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]
  product_sort_order: String

  """Related Products"""
  related_products: [ProductInterface]

  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String

  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage

  """The beginning date that a product has a special price."""
  special_from_date: String

  """The discounted price of the product."""
  special_price: Float

  """The end date that a product has a special price."""
  special_to_date: String

  """Stock status of the product"""
  stock_status: ProductStockStatus
  style: String

  """The file name of a swatch image"""
  swatch_image: String

  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")

  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")

  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use __typename instead.")
  type_of_product: Int
  upc_code: String

  """Timestamp indicating when the product was updated."""
  updated_at: String

  """Upsell Products"""
  upsell_products: [ProductInterface]

  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")

  """URL rewrites list"""
  url_rewrites: [UrlRewrite]

  """The part of the product URL that is appended after the url key"""
  url_suffix: String

  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
}

"""ProductLinks is an implementation of ProductLinksInterface."""
type ProductLinks implements ProductLinksInterface {
  """One of related, associated, upsell, or crosssell."""
  link_type: String

  """The SKU of the linked product."""
  linked_product_sku: String

  """
  The type of linked product (simple, virtual, bundle, downloadable, grouped, configurable).
  """
  linked_product_type: String

  """The position within the list of product links."""
  position: Int

  """The identifier of the linked product."""
  sku: String
}

"""
ProductLinks contains information about linked products, including the link type and product type of each item.
"""
interface ProductLinksInterface {
  """One of related, associated, upsell, or crosssell."""
  link_type: String

  """The SKU of the linked product."""
  linked_product_sku: String

  """
  The type of linked product (simple, virtual, bundle, downloadable, grouped, configurable).
  """
  linked_product_type: String

  """The position within the list of product links."""
  position: Int

  """The identifier of the linked product."""
  sku: String
}

"""
ProductMediaGalleryEntriesContent contains an image in base64 format and basic information about the image.
"""
type ProductMediaGalleryEntriesContent {
  """The image in base64 format."""
  base64_encoded_data: String

  """The file name of the image."""
  name: String

  """The MIME type of the file, such as image/png."""
  type: String
}

"""
ProductMediaGalleryEntriesVideoContent contains a link to a video file and basic information about the video.
"""
type ProductMediaGalleryEntriesVideoContent {
  """Must be external-video."""
  media_type: String

  """A description of the video."""
  video_description: String

  """Optional data about the video."""
  video_metadata: String

  """Describes the video source."""
  video_provider: String

  """The title of the video."""
  video_title: String

  """The URL to the video."""
  video_url: String
}

"""Represents a product price."""
type ProductPrice {
  """
  The price discount. Represents the difference between the regular and final price.
  """
  discount: ProductDiscount

  """The final price of the product after discounts applied."""
  final_price: Money!

  """The multiple FPTs that can be applied to a product price."""
  fixed_product_taxes: [FixedProductTax]

  """The regular price of the product."""
  regular_price: Money!
}

"""
ProductPrices is deprecated, replaced by PriceRange. The ProductPrices object
contains the regular price of an item, as well as its minimum and maximum
prices. Only composite products, which include bundle, configurable, and grouped
products, can contain a minimum and maximum price.
"""
type ProductPrices {
  """
  The highest possible final price for all the options defined within a
  composite product. If you are specifying a price range, this would be the to value.
  """
  maximalPrice: Price @deprecated(reason: "Use PriceRange.maximum_price.")

  """
  The lowest possible final price for all the options defined within a composite
  product. If you are specifying a price range, this would be the from value.
  """
  minimalPrice: Price @deprecated(reason: "Use PriceRange.minimum_price.")

  """The base price of a product."""
  regularPrice: Price @deprecated(reason: "Use regular_price from PriceRange.minimum_price or PriceRange.maximum_price.")
}

"""
The Products object is the top-level object returned in a product search.
"""
type Products {
  """Layered navigation aggregations."""
  aggregations: [Aggregation]

  """Layered navigation filters array."""
  filters: [LayerFilter] @deprecated(reason: "Use aggregations instead")

  """An array of products that match the specified search criteria."""
  items: [ProductInterface]

  """
  An object that includes the page_info and currentPage values specified in the query.
  """
  page_info: SearchResultPageInfo

  """
  An object that includes the default sort field and all available sort fields.
  """
  sort_fields: SortFields

  """The number of products returned."""
  total_count: Int
}

"""
ProductSortInput is deprecated, use @ProductAttributeSortInput instead.
ProductSortInput specifies the attribute to use for sorting search results and
indicates whether the results are sorted in ascending or descending order.
"""
input ProductSortInput {
  """The product's country of origin."""
  country_of_manufacture: SortEnum

  """Timestamp indicating when the product was created."""
  created_at: SortEnum

  """The name of a custom layout."""
  custom_layout: SortEnum

  """XML code that is applied as a layout update to the product page."""
  custom_layout_update: SortEnum

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: SortEnum

  """Indicates whether a gift message is available."""
  gift_message_available: SortEnum

  """
  Indicates whether additional attributes have been created for the product.
  """
  has_options: SortEnum

  """The relative path to the main image on the product page."""
  image: SortEnum

  """The label assigned to a product image."""
  image_label: SortEnum

  """Indicates whether the product can be returned"""
  is_returnable: SortEnum

  """A number representing the product's manufacturer."""
  manufacturer: SortEnum

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: SortEnum

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: SortEnum

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: SortEnum

  """The product name. Customers use this name to identify the product."""
  name: SortEnum

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  news_from_date: SortEnum

  """The end date for new product listings."""
  news_to_date: SortEnum

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: SortEnum

  """The price of the item."""
  price: SortEnum

  """Indicates whether the product has required options."""
  required_options: SortEnum

  """A short description of the product. Its use depends on the theme."""
  short_description: SortEnum

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: SortEnum

  """The relative path to the small image, which is used on catalog pages."""
  small_image: SortEnum

  """The label assigned to a product's small image."""
  small_image_label: SortEnum

  """The beginning date that a product has a special price."""
  special_from_date: SortEnum

  """The discounted price of the product."""
  special_price: SortEnum

  """The end date that a product has a special price."""
  special_to_date: SortEnum

  """The file name of a swatch image"""
  swatch_image: SortEnum

  """The relative path to the product's thumbnail image."""
  thumbnail: SortEnum

  """The label assigned to a product's thumbnail image."""
  thumbnail_label: SortEnum

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: SortEnum

  """Timestamp indicating when the product was updated."""
  updated_at: SortEnum

  """The part of the URL that identifies the product"""
  url_key: SortEnum
  url_path: SortEnum

  """The weight of the item, in units defined by the store."""
  weight: SortEnum
}

"""
This enumeration states whether a product stock status is in stock or out of stock
"""
enum ProductStockStatus {
  IN_STOCK
  OUT_OF_STOCK
}

"""
ProductTierPrices is deprecated and has been replaced by TierPrice. The
ProductTierPrices object defines a tier price, which is a quantity discount
offered to a specific customer group.
"""
type ProductTierPrices {
  """The ID of the customer group."""
  customer_group_id: String @deprecated(reason: "customer_group_id is not relevant for storefront.")

  """The percentage discount of the item."""
  percentage_value: Float @deprecated(reason: "ProductTierPrices is deprecated. Use TierPrice.discount.")

  """
  The number of items that must be purchased to qualify for tier pricing.
  """
  qty: Float @deprecated(reason: "ProductTierPrices is deprecated, use TierPrice.quantity.")

  """The price of the fixed price item."""
  value: Float @deprecated(reason: "ProductTierPrices is deprecated. Use TierPrice.final_price")

  """The ID assigned to the website."""
  website_id: Float @deprecated(reason: "website_id is not relevant for storefront.")
}

"""Contains information about a product video."""
type ProductVideo implements MediaGalleryInterface {
  """Whether the image is hidden from view."""
  disabled: Boolean

  """The label of the product image or video."""
  label: String

  """The media item's position after it has been sorted."""
  position: Int

  """The URL of the product image or video."""
  url: String

  """Contains a ProductMediaGalleryEntriesVideoContent object."""
  video_content: ProductMediaGalleryEntriesVideoContent
}

type Query {
  """Returns information about shopping cart"""
  cart(cart_id: String!): Cart

  """
  The category query searches for categories that match the criteria specified in the search and filter attributes.
  """
  category(
    """Id of the category."""
    id: Int
  ): CategoryTree @deprecated(reason: "Use 'categoryList' query instead of 'category' query")

  """Returns an array of categories based on the specified filters."""
  categoryList(
    """Identifies which Category filter inputs to search for and return."""
    filters: CategoryFilterInput
  ): [CategoryTree]

  """The Checkout Agreements information"""
  checkoutAgreements: [CheckoutAgreement]

  """The CMS block query returns information about CMS blocks"""
  cmsBlocks(
    """Identifiers of the CMS blocks"""
    identifiers: [String]
  ): CmsBlocks

  """The CMS page query returns information about a CMS page"""
  cmsPage(
    """Id of the CMS page"""
    id: Int

    """Identifier of the CMS page"""
    identifier: String
  ): CmsPage

  """The countries query provides information for all countries."""
  countries: [Country]

  """The countries query provides information for a single country."""
  country(id: String): Country

  """The currency query returns information about store currency."""
  currency: Currency

  """
  The customAttributeMetadata query returns the attribute type, given an attribute code and entity type
  """
  customAttributeMetadata(attributes: [AttributeInput!]!): CustomAttributeMetadata

  """The customer query returns information about a customer account"""
  customer: Customer

  """Returns information about the customer shopping cart"""
  customerCart: Cart!

  """The query returns the contents of a customer's downloadable products"""
  customerDownloadableProducts: CustomerDownloadableProducts

  """List of customer orders"""
  customerOrders: CustomerOrders

  """Return a list of customer payment tokens"""
  customerPaymentTokens: CustomerPaymentTokens

  """
  Retrieve secure PayPal url for Payments Pro Hosted Solution transaction.
  """
  getHostedProUrl(input: HostedProUrlInput!): HostedProUrl

  """
  Retrieve payment credentials for transaction. Use this query for Payflow Link and Payments Advanced payment methods.
  """
  getPayflowLinkToken(input: PayflowLinkTokenInput!): PayflowLinkToken

  """Get information for gift card account by code"""
  giftCardAccount(input: GiftCardAccountInput!): GiftCardAccount
  isEmailAvailable(
    """The new customer email"""
    email: String!
  ): IsEmailAvailableOutput

  """
  The products query searches for products that match the criteria specified in the search and filter attributes.
  """
  products(
    """Performs a full-text search using the specified key words."""
    search: String

    """Identifies which product attributes to search for and return."""
    filter: ProductAttributeFilterInput

    """
    Specifies the maximum number of results to return at once. This attribute is optional.
    """
    pageSize: Int = 20

    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1

    """
    Specifies which attributes to sort on, and whether to return the results in ascending or descending order.
    """
    sort: ProductAttributeSortInput
  ): Products

  """The store config query"""
  storeConfig: StoreConfig

  """
  The urlResolver query returns the relative URL for a specified product,
  category or CMS page, using as input a url_key appended by the url_suffix, if one exists
  """
  urlResolver(url: String!): EntityUrl

  """The wishlist query returns the contents of a customer's wish list"""
  wishlist: WishlistOutput @deprecated(reason: "Moved under `Customer` `wishlist`")
}

type Region {
  code: String
  id: Int
  name: String
}

input RemoveCouponFromCartInput {
  cart_id: String!
}

type RemoveCouponFromCartOutput {
  cart: Cart
}

"""Defines the input required to run the removeGiftCardFromCart mutation"""
input RemoveGiftCardFromCartInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String!

  """The gift card code to be removed to the cart"""
  gift_card_code: String!
}

"""Defines the possible output for the removeGiftCardFromCart mutation"""
type RemoveGiftCardFromCartOutput {
  """Describes the contents of the specified shopping cart"""
  cart: Cart!
}

input RemoveItemFromCartInput {
  cart_id: String!
  cart_item_id: Int!
}

type RemoveItemFromCartOutput {
  cart: Cart!
}

"""
Defines the input required to run the removeStoreCreditFromCart mutation
"""
input RemoveStoreCreditFromCartInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String!
}

"""Defines the possible output for the removeStoreCreditFromCart mutation"""
type RemoveStoreCreditFromCartOutput {
  """Describes the contents of the specified shopping cart"""
  cart: Cart!
}

type RevokeCustomerTokenOutput {
  result: Boolean!
}

"""SearchResultPageInfo provides navigation for the query response"""
type SearchResultPageInfo {
  """Specifies which page of results to return"""
  current_page: Int

  """Specifies the maximum number of items to return"""
  page_size: Int

  """Total pages"""
  total_pages: Int
}

type SelectedBundleOption {
  id: Int!
  label: String!
  type: String!
  values: [SelectedBundleOptionValue]!
}

type SelectedBundleOptionValue {
  id: Int!
  label: String!
  price: Float!
  quantity: Float!
}

type SelectedConfigurableOption {
  id: Int!
  option_label: String!
  value_id: Int!
  value_label: String!
}

type SelectedCustomizableOption {
  id: Int!
  is_required: Boolean!
  label: String!
  sort_order: Int!
  values: [SelectedCustomizableOptionValue]!
}

type SelectedCustomizableOptionValue {
  id: Int!
  label: String!
  price: CartItemSelectedOptionValuePrice!
  value: String!
}

type SelectedPaymentMethod {
  """The payment method code"""
  code: String!

  """The purchase order number."""
  purchase_order_number: String

  """The payment method title."""
  title: String!
}

type SelectedShippingMethod {
  amount: Money!
  base_amount: Money @deprecated(reason: "The field should not be used on the storefront")
  carrier_code: String!
  carrier_title: String!
  method_code: String!
  method_title: String!
}

input SendEmailToFriendInput {
  product_id: Int!
  recipients: [SendEmailToFriendRecipientInput]!
  sender: SendEmailToFriendSenderInput!
}

type SendEmailToFriendOutput {
  recipients: [SendEmailToFriendRecipient]
  sender: SendEmailToFriendSender
}

type SendEmailToFriendRecipient {
  email: String!
  name: String!
}

input SendEmailToFriendRecipientInput {
  email: String!
  name: String!
}

type SendEmailToFriendSender {
  email: String!
  message: String!
  name: String!
}

input SendEmailToFriendSenderInput {
  email: String!
  message: String!
  name: String!
}

input SetBillingAddressOnCartInput {
  billing_address: BillingAddressInput!
  cart_id: String!
}

type SetBillingAddressOnCartOutput {
  cart: Cart!
}

input SetGuestEmailOnCartInput {
  cart_id: String!
  email: String!
}

type SetGuestEmailOnCartOutput {
  cart: Cart!
}

input SetPaymentMethodAndPlaceOrderInput {
  cart_id: String!
  payment_method: PaymentMethodInput!
}

input SetPaymentMethodOnCartInput {
  cart_id: String!
  payment_method: PaymentMethodInput!
}

type SetPaymentMethodOnCartOutput {
  cart: Cart!
}

input SetShippingAddressesOnCartInput {
  cart_id: String!
  shipping_addresses: [ShippingAddressInput]!
}

type SetShippingAddressesOnCartOutput {
  cart: Cart!
}

input SetShippingMethodsOnCartInput {
  cart_id: String!
  shipping_methods: [ShippingMethodInput]!
}

type SetShippingMethodsOnCartOutput {
  cart: Cart!
}

"""
This enumeration defines whether bundle items must be shipped together.
"""
enum ShipBundleItemsEnum {
  TOGETHER
  SEPARATELY
}

input ShippingAddressInput {
  address: CartAddressInput
  customer_address_id: Int
  customer_notes: String
}

type ShippingCartAddress implements CartAddressInterface {
  available_shipping_methods: [AvailableShippingMethod]
  cart_items: [CartItemQuantity] @deprecated(reason: "`cart_items_v2` should be used instead")
  cart_items_v2: [CartItemInterface]
  city: String!
  company: String
  country: CartAddressCountry!
  customer_notes: String
  firstname: String!
  items_weight: Float @deprecated(reason: "This information shoud not be exposed on frontend")
  lastname: String!
  postcode: String
  region: CartAddressRegion
  selected_shipping_method: SelectedShippingMethod
  street: [String]!
  telephone: String!
}

input ShippingMethodInput {
  carrier_code: String!
  method_code: String!
}

"""Simple Cart Item"""
type SimpleCartItem implements CartItemInterface {
  customizable_options: [SelectedCustomizableOption]
  id: String!
  prices: CartItemPrices
  product: ProductInterface!
  quantity: Float!
}

"""
A simple product is tangible and are usually sold as single units or in fixed quantities.
"""
type SimpleProduct implements ProductInterface & PhysicalProductInterface & CustomizableProductInterface {
  """The attribute set assigned to the product."""
  attribute_set_id: Int

  """
  Relative canonical URL. This value is returned only if the system setting 'Use
  Canonical Link Meta Tag For Products' is enabled
  """
  canonical_url: String
  capsules: Int

  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: String
  coravin_at_a_glance: String
  coravin_autodelivery: String
  coravin_compare: String
  coravin_comparison_chart: String
  coravin_custom_info: String
  coravin_demooz: String
  coravin_exclusive: String
  coravin_faqs: String
  coravin_features: String
  coravin_getting_started: String
  coravin_market: String
  coravin_powerreviews_id: String
  coravin_tech_specs: String
  coravin_usage_tips: String
  coravin_why_capsules: String

  """The product's country of origin."""
  country_of_manufacture: String

  """Timestamp indicating when the product was created."""
  created_at: String

  """Crosssell Products"""
  crosssell_products: [ProductInterface]

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue

  """Indicates whether a gift message is available."""
  gift_message_available: String

  """The ID number assigned to the product."""
  id: Int

  """The relative path to the main image on the product page."""
  image: ProductImage
  is_featured: Int

  """Indicates whether the product can be returned"""
  is_returnable: String

  """A number representing the product's manufacturer."""
  manufacturer: Int

  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]

  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  mirakl_mcm_is_operator_master: Int
  mirakl_mcm_product_id: String
  mirakl_offer_state_ids: String
  mirakl_shop_ids: String
  mirakl_sync: Int

  """The product name. Customers use this name to identify the product."""
  name: String

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  new_product: Int

  """The end date for new product listings."""
  new_to_date: String

  """Product stock only x left count"""
  only_x_left_in_stock: Float

  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  persona: String
  pr_asin: String

  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")

  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!

  """An array of TierPrice objects."""
  price_tiers: [TierPrice]
  product_family: String

  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]
  product_sort_order: String

  """Related Products"""
  related_products: [ProductInterface]

  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String

  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage

  """The beginning date that a product has a special price."""
  special_from_date: String

  """The discounted price of the product."""
  special_price: Float

  """The end date that a product has a special price."""
  special_to_date: String

  """Stock status of the product"""
  stock_status: ProductStockStatus
  style: String

  """The file name of a swatch image"""
  swatch_image: String

  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")

  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")

  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use __typename instead.")
  type_of_product: Int
  upc_code: String

  """Timestamp indicating when the product was updated."""
  updated_at: String

  """Upsell Products"""
  upsell_products: [ProductInterface]

  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")

  """URL rewrites list"""
  url_rewrites: [UrlRewrite]

  """The part of the product URL that is appended after the url key"""
  url_suffix: String

  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")

  """The weight of the item, in units defined by the store."""
  weight: Float
}

input SimpleProductCartItemInput {
  customizable_options: [CustomizableOptionInput]
  data: CartItemInput!
}

"""
This enumeration indicates whether to return results in ascending or descending order
"""
enum SortEnum {
  ASC
  DESC
}

type SortField {
  """Label of sort field."""
  label: String

  """Attribute code of sort field."""
  value: String
}

"""
SortFields contains a default value for sort fields and all available sort fields.
"""
type SortFields {
  """Default value of sort fields."""
  default: String

  """Available sort fields."""
  options: [SortField]
}

"""The type contains information about a store config"""
type StoreConfig {
  """Footer Miscellaneous HTML"""
  absolute_footer: String

  """Base currency code"""
  base_currency_code: String

  """Base link URL for the store"""
  base_link_url: String

  """Base media URL for the store"""
  base_media_url: String

  """Base static URL for the store"""
  base_static_url: String

  """Base URL for the store"""
  base_url: String

  """Default Sort By."""
  catalog_default_sort_by: String

  """
  Corresponds to the 'Display Prices In Product Lists' field. It indicates how
  FPT information is displayed on category pages
  """
  category_fixed_product_tax_display_setting: FixedProductTaxDisplaySettings

  """Category URL Suffix."""
  category_url_suffix: String

  """CMS Home Page"""
  cms_home_page: String

  """CMS No Cookies Page"""
  cms_no_cookies: String

  """CMS No Route Page"""
  cms_no_route: String

  """A code assigned to the store to identify it"""
  code: String

  """Copyright"""
  copyright: String

  """Default Meta Description"""
  default_description: String

  """Default display currency code"""
  default_display_currency_code: String

  """Default Meta Keywords"""
  default_keywords: String

  """Default Page Title"""
  default_title: String

  """Display Demo Store Notice"""
  demonotice: Int

  """Default Web URL"""
  front: String

  """Products per Page on Grid Default Value."""
  grid_per_page: Int

  """Products per Page on Grid Allowed Values."""
  grid_per_page_values: String

  """Scripts and Style Sheets"""
  head_includes: String

  """Favicon Icon"""
  head_shortcut_icon: String

  """Logo Image"""
  header_logo_src: String

  """The ID number assigned to the store"""
  id: Int

  """List Mode."""
  list_mode: String

  """Products per Page on List Default Value."""
  list_per_page: Int

  """Products per Page on List Allowed Values."""
  list_per_page_values: String

  """Store locale"""
  locale: String

  """Logo Image Alt"""
  logo_alt: String

  """Logo Attribute Height"""
  logo_height: Int

  """Logo Attribute Width"""
  logo_width: Int

  """Default No-route URL"""
  no_route: String

  """
  Corresponds to the 'Display Prices On Product View Page' field. It indicates
  how FPT information is displayed on product pages
  """
  product_fixed_product_tax_display_setting: FixedProductTaxDisplaySettings

  """Product URL Suffix."""
  product_url_suffix: String

  """The ID of the root category"""
  root_category_id: Int

  """
  Corresponds to the 'Display Prices In Sales Modules' field. It indicates how
  FPT information is displayed on cart, checkout, and order pages
  """
  sales_fixed_product_tax_display_setting: FixedProductTaxDisplaySettings

  """Secure base link URL for the store"""
  secure_base_link_url: String

  """Secure base media URL for the store"""
  secure_base_media_url: String

  """Secure base static URL for the store"""
  secure_base_static_url: String

  """Secure base URL for the store"""
  secure_base_url: String

  """Show Breadcrumbs for CMS Pages"""
  show_cms_breadcrumbs: Int

  """Name of the store"""
  store_name: String

  """Timezone of the store"""
  timezone: String

  """Page Title Prefix"""
  title_prefix: String

  """Page Title Separator."""
  title_separator: String

  """Page Title Suffix"""
  title_suffix: String

  """The ID number assigned to the website store belongs"""
  website_id: Int

  """The unit of weight"""
  weight_unit: String

  """Welcome Text"""
  welcome: String
}

type SwatchData {
  """Type of swatch filter item: 1 - text, 2 - image"""
  type: String

  """Value for swatch item (text or image link)"""
  value: String
}

interface SwatchDataInterface {
  """Value of swatch item (HEX color code, image link or textual value)"""
  value: String
}

type SwatchLayerFilterItem implements LayerFilterItemInterface & SwatchLayerFilterItemInterface {
  """Count of items by filter."""
  items_count: Int @deprecated(reason: "Use AggregationOption.count instead.")

  """Filter label."""
  label: String @deprecated(reason: "Use AggregationOption.label instead.")

  """Data required to render swatch filter item"""
  swatch_data: SwatchData

  """Value for filter request variable to be used in query."""
  value_string: String @deprecated(reason: "Use AggregationOption.value instead.")
}

interface SwatchLayerFilterItemInterface {
  """Data required to render swatch filter item"""
  swatch_data: SwatchData
}

type TextSwatchData implements SwatchDataInterface {
  """Value of swatch item (HEX color code, image link or textual value)"""
  value: String
}

"""A price based on the quantity purchased."""
type TierPrice {
  """The price discount that this tier represents."""
  discount: ProductDiscount
  final_price: Money

  """
  The minimum number of items that must be purchased to qualify for this price tier.
  """
  quantity: Float
}

input UpdateCartItemsInput {
  cart_id: String!
  cart_items: [CartItemUpdateInput]!
}

type UpdateCartItemsOutput {
  cart: Cart!
}

"""The object contains URL rewrite details"""
type UrlRewrite {
  """Request parameters"""
  parameters: [HttpQueryParameter]

  """Request URL"""
  url: String
}

"""This enumeration defines the entity type."""
enum UrlRewriteEntityTypeEnum {
  CMS_PAGE
  PRODUCT
  CATEGORY
}

"""Virtual Cart Item"""
type VirtualCartItem implements CartItemInterface {
  customizable_options: [SelectedCustomizableOption]
  id: String!
  prices: CartItemPrices
  product: ProductInterface!
  quantity: Float!
}

"""
A virtual product is non-tangible product that does not require shipping and is not kept in inventory.
"""
type VirtualProduct implements ProductInterface & CustomizableProductInterface {
  """The attribute set assigned to the product."""
  attribute_set_id: Int

  """
  Relative canonical URL. This value is returned only if the system setting 'Use
  Canonical Link Meta Tag For Products' is enabled
  """
  canonical_url: String
  capsules: Int

  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: String
  coravin_at_a_glance: String
  coravin_autodelivery: String
  coravin_compare: String
  coravin_comparison_chart: String
  coravin_custom_info: String
  coravin_demooz: String
  coravin_exclusive: String
  coravin_faqs: String
  coravin_features: String
  coravin_getting_started: String
  coravin_market: String
  coravin_powerreviews_id: String
  coravin_tech_specs: String
  coravin_usage_tips: String
  coravin_why_capsules: String

  """The product's country of origin."""
  country_of_manufacture: String

  """Timestamp indicating when the product was created."""
  created_at: String

  """Crosssell Products"""
  crosssell_products: [ProductInterface]

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue

  """Indicates whether a gift message is available."""
  gift_message_available: String

  """The ID number assigned to the product."""
  id: Int

  """The relative path to the main image on the product page."""
  image: ProductImage
  is_featured: Int

  """Indicates whether the product can be returned"""
  is_returnable: String

  """A number representing the product's manufacturer."""
  manufacturer: Int

  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]

  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  mirakl_mcm_is_operator_master: Int
  mirakl_mcm_product_id: String
  mirakl_offer_state_ids: String
  mirakl_shop_ids: String
  mirakl_sync: Int

  """The product name. Customers use this name to identify the product."""
  name: String

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String
  new_product: Int

  """The end date for new product listings."""
  new_to_date: String

  """Product stock only x left count"""
  only_x_left_in_stock: Float

  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String
  persona: String
  pr_asin: String

  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")

  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!

  """An array of TierPrice objects."""
  price_tiers: [TierPrice]
  product_family: String

  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]
  product_sort_order: String

  """Related Products"""
  related_products: [ProductInterface]

  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String

  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage

  """The beginning date that a product has a special price."""
  special_from_date: String

  """The discounted price of the product."""
  special_price: Float

  """The end date that a product has a special price."""
  special_to_date: String

  """Stock status of the product"""
  stock_status: ProductStockStatus
  style: String

  """The file name of a swatch image"""
  swatch_image: String

  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")

  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")

  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use __typename instead.")
  type_of_product: Int
  upc_code: String

  """Timestamp indicating when the product was updated."""
  updated_at: String

  """Upsell Products"""
  upsell_products: [ProductInterface]

  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")

  """URL rewrites list"""
  url_rewrites: [UrlRewrite]

  """The part of the product URL that is appended after the url key"""
  url_suffix: String

  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
}

input VirtualProductCartItemInput {
  customizable_options: [CustomizableOptionInput]
  data: CartItemInput!
}

"""
Website is deprecated because it is should not be used on storefront. The type contains information about a website
"""
type Website {
  """A code assigned to the website to identify it"""
  code: String @deprecated(reason: "The field should not be used on the storefront.")

  """The default group ID that the website has"""
  default_group_id: String @deprecated(reason: "The field should not be used on the storefront.")

  """The ID number assigned to the website"""
  id: Int @deprecated(reason: "The field should not be used on the storefront.")

  """Specifies if this is the default website"""
  is_default: Boolean @deprecated(reason: "The field should not be used on the storefront.")

  """The website name. Websites use this name to identify it easier."""
  name: String @deprecated(reason: "The field should not be used on the storefront.")

  """The attribute to use for sorting websites"""
  sort_order: Int @deprecated(reason: "The field should not be used on the storefront.")
}

type Wishlist {
  """Wishlist unique identifier"""
  id: ID

  """An array of items in the customer's wish list"""
  items: [WishlistItem]

  """The number of items in the wish list"""
  items_count: Int

  """An encrypted code that Magento uses to link to the wish list"""
  sharing_code: String

  """The time of the last modification to the wish list"""
  updated_at: String
}

type WishlistItem {
  """The time when the customer added the item to the wish list"""
  added_at: String

  """The customer's comment about this item"""
  description: String

  """The wish list item ID"""
  id: Int
  product: ProductInterface

  """The quantity of this wish list item"""
  qty: Float
}

"""Deprecated: `Wishlist` type should be used instead"""
type WishlistOutput {
  """An array of items in the customer's wish list"""
  items: [WishlistItem] @deprecated(reason: "Use field `items` from type `Wishlist` instead")

  """The number of items in the wish list"""
  items_count: Int @deprecated(reason: "Use field `items_count` from type `Wishlist` instead")

  """
  When multiple wish lists are enabled, the name the customer assigns to the wishlist
  """
  name: String @deprecated(reason: "This field is related to Commerce functionality and is always `null` in Open Source edition")

  """An encrypted code that Magento uses to link to the wish list"""
  sharing_code: String @deprecated(reason: "Use field `sharing_code` from type `Wishlist` instead")

  """The time of the last modification to the wish list"""
  updated_at: String @deprecated(reason: "Use field `updated_at` from type `Wishlist` instead")
}
